/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@suprsend";
exports.ids = ["vendor-chunks/@suprsend"];
exports.modules = {

/***/ "(ssr)/./node_modules/@suprsend/react-inbox/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@suprsend/react-inbox/dist/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nvar React__default = _interopDefault(React);\nvar SuprsendJSInbox = _interopDefault(__webpack_require__(/*! @suprsend/js-inbox */ \"(ssr)/./node_modules/@suprsend/js-inbox/dist/index.cjs\"));\nvar reactPopper = __webpack_require__(/*! react-popper */ \"(ssr)/./node_modules/react-popper/lib/cjs/index.js\");\nvar styled = _interopDefault(__webpack_require__(/*! @emotion/styled */ \"(ssr)/./node_modules/@emotion/styled/dist/emotion-styled.esm.js\"));\nvar react = __webpack_require__(/*! @emotion/react */ \"(ssr)/./node_modules/@emotion/react/dist/emotion-react.esm.js\");\nvar Markdown = _interopDefault(__webpack_require__(/*! react-markdown */ \"(ssr)/./node_modules/react-markdown/index.js\"));\nvar TimeAgo = _interopDefault(__webpack_require__(/*! react-timeago */ \"(ssr)/./node_modules/react-timeago/lib/index.js\"));\nvar InfiniteScroll = _interopDefault(__webpack_require__(/*! react-infinite-scroll-component */ \"(ssr)/./node_modules/react-infinite-scroll-component/dist/index.js\"));\nvar reactToastify = __webpack_require__(/*! react-toastify */ \"(ssr)/./node_modules/react-toastify/dist/react-toastify.js\");\n__webpack_require__(/*! react-toastify/dist/ReactToastify.css */ \"(ssr)/./node_modules/react-toastify/dist/ReactToastify.css\");\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}\n\nvar _templateObject, _templateObject2, _templateObject3;\nvar lightColors = {\n  primary: '#2E70E8',\n  primaryText: '#1E293B',\n  secondaryText: '#475569',\n  border: '#E2E8F0',\n  main: '#FFFFFF',\n  error: '#B42318'\n};\nvar darkColors = {\n  primary: '#2E70E8',\n  primaryText: '#EFEFEF',\n  secondaryText: '#CBD5E1',\n  border: '#3A4A61',\n  main: '#1D2635',\n  error: '#F97066'\n};\nvar CText = styled.p(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\\n  font-size: 14px;\\n  font-weight: 400;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,\\n    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\\n  line-height: 20px;\\n  color: \", \";\\n  margin: 0px;\\n\"])), lightColors.primaryText);\nvar HelperText = styled(CText)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteralLoose([\"\\n  font-size: 12px;\\n  color: \", \";\\n\"])), lightColors.secondaryText);\nvar HeadingText = styled(CText)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteralLoose([\"\\n  font-size: 16px;\\n  font-weight: 500;\\n\"])));\nvar darkTheme = {\n  bell: {\n    color: '#fff'\n  },\n  badge: {\n    backgroundColor: darkColors.primary\n  },\n  header: {\n    container: {\n      backgroundColor: darkColors.main,\n      borderBottom: \"0.5px solid \" + darkColors.border,\n      boxShadow: '0 0 5px 0 rgba(0, 0, 0, 0.5)'\n    },\n    headerText: {\n      color: darkColors.primaryText\n    },\n    markAllReadText: {\n      color: darkColors.primary\n    }\n  },\n  tabs: {\n    color: darkColors.primaryText,\n    unselectedColor: darkColors.secondaryText + 'D9',\n    bottomColor: darkColors.primary,\n    badgeColor: 'rgba(100, 116, 139, 0.5)',\n    badgeText: darkColors.primaryText\n  },\n  notificationsContainer: {\n    container: {\n      backgroundColor: darkColors.main,\n      borderColor: darkColors.border\n    },\n    noNotificationsText: {\n      color: darkColors.primaryText\n    },\n    noNotificationsSubtext: {\n      color: darkColors.secondaryText\n    },\n    loader: {\n      color: darkColors.primary\n    }\n  },\n  notification: {\n    container: {\n      borderBottom: \"1px solid \" + darkColors.border,\n      readBackgroundColor: darkColors.main,\n      unreadBackgroundColor: '#273244',\n      hoverBackgroundColor: '#2D3A4D'\n    },\n    pinnedText: {\n      color: darkColors === null || darkColors === void 0 ? void 0 : darkColors.secondaryText\n    },\n    headerText: {\n      color: darkColors.primaryText\n    },\n    bodyText: {\n      color: darkColors.secondaryText,\n      blockquoteColor: 'rgba(100, 116, 139, 0.5)'\n    },\n    unseenDot: {\n      backgroundColor: darkColors.primary\n    },\n    createdOnText: {\n      color: darkColors.secondaryText\n    },\n    subtext: {\n      color: '#94a3b8'\n    },\n    actions: [{\n      container: {\n        backgroundColor: darkColors.primary\n      }\n    }, {\n      container: {\n        borderColor: darkColors.border,\n        backgroundColor: 'transparent',\n        hoverBackgroundColor: darkColors.main\n      },\n      text: {\n        color: darkColors.secondaryText\n      }\n    }],\n    expiresText: {\n      backgroundColor: 'rgba(100, 116, 139, 0.5)',\n      color: darkColors.secondaryText,\n      expiringBackgroundColor: 'rgba(217, 45, 32, 0.15)',\n      expiringColor: darkColors.error\n    },\n    actionsMenuIcon: {\n      color: darkColors.secondaryText,\n      hoverBackgroundColor: 'rgba(100, 116, 139, 0.5)'\n    },\n    actionsMenu: {\n      backgroundColor: darkColors.main,\n      borderColor: darkColors.border\n    },\n    actionsMenuItem: {\n      hoverBackgroundColor: 'rgba(100, 116, 139, 0.2)'\n    },\n    actionsMenuItemIcon: {\n      color: darkColors.secondaryText\n    },\n    actionsMenuItemText: {\n      color: darkColors.secondaryText\n    }\n  },\n  toast: {\n    container: {\n      backgroundColor: darkColors.main,\n      borderColor: darkColors.border\n    },\n    headerText: {\n      color: darkColors.primaryText\n    },\n    bodyText: {\n      color: darkColors.secondaryText,\n      blockquoteColor: darkColors.border\n    }\n  }\n};\n\nvar DefaultBellIcon = function DefaultBellIcon(_ref) {\n  var style = _ref.style;\n  var height = (style === null || style === void 0 ? void 0 : style.height) || 24;\n  var width = (style === null || style === void 0 ? void 0 : style.width) || 24;\n  var color = (style === null || style === void 0 ? void 0 : style.color) || lightColors.primaryText;\n  if ((style === null || style === void 0 ? void 0 : style.bellType) === 'solid') {\n    return /*#__PURE__*/React__default.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: width,\n      height: height,\n      color: color,\n      viewBox: \"0 0 20 20\",\n      fill: \"currentColor\"\n    }, /*#__PURE__*/React__default.createElement(\"path\", {\n      d: \"M10 2a6 6 0 00-6 6v3.586l-.707.707A1 1 0 004 14h12a1 1 0 00.707-1.707L16 11.586V8a6 6 0 00-6-6zM10 18a3 3 0 01-3-3h6a3 3 0 01-3 3z\"\n    }));\n  }\n  return /*#__PURE__*/React__default.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: width,\n    height: height,\n    color: color,\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\",\n    strokeWidth: \"2\"\n  }, /*#__PURE__*/React__default.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 17h5l-1.405-1.405A2.032 2.032 0 0118 14.158V11a6.002 6.002 0 00-4-5.659V5a2 2 0 10-4 0v.341C7.67 6.165 6 8.388 6 11v3.159c0 .538-.214 1.055-.595 1.436L4 17h5m6 0v1a3 3 0 11-6 0v-1m6 0H9\"\n  }));\n};\n\nvar InboxContext = React.createContext({});\nvar InboxThemeContext = React.createContext({});\nfunction useInbox() {\n  return React.useContext(InboxContext);\n}\nfunction useTheme() {\n  return React.useContext(InboxThemeContext);\n}\n\nfunction Bell() {\n  var _useInbox = useInbox(),\n    bellComponent = _useInbox.bellComponent;\n  var _useTheme = useTheme(),\n    bell = _useTheme.bell;\n  if (bellComponent) {\n    var BellComponent = bellComponent;\n    return /*#__PURE__*/React__default.createElement(BellComponent, null);\n  }\n  return /*#__PURE__*/React__default.createElement(DefaultBellIcon, {\n    style: bell\n  });\n}\n\nvar _templateObject$1;\nfunction Badge() {\n  var _useInbox = useInbox(),\n    count = _useInbox.notificationsData.count,\n    badgeComponent = _useInbox.badgeComponent;\n  var _useTheme = useTheme(),\n    badge = _useTheme.badge;\n  if (count > 0) {\n    if (badgeComponent) {\n      var BagdeComponent = badgeComponent;\n      return /*#__PURE__*/React__default.createElement(BagdeComponent, {\n        count: count\n      });\n    }\n    return /*#__PURE__*/React__default.createElement(CountText, {\n      style: badge\n    }, count);\n  }\n  return null;\n}\nvar CountText = styled(CText)(_templateObject$1 || (_templateObject$1 = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  right: -3px;\\n  top: -7px;\\n  display: inline-block;\\n  font-size: 10px;\\n  line-height: 1;\\n  padding: 3px 6px;\\n  border-radius: 50%;\\n  background-color: \", \";\\n  color: \", \";\\n  text-align: center;\\n\"])), lightColors.primary, lightColors.main);\n\nvar isImgUrl = function isImgUrl(url) {\n  try {\n    if (url) {\n      var img = new window.Image();\n      img.src = url;\n      return Promise.resolve(new Promise(function (resolve) {\n        img.onerror = function () {\n          return resolve(false);\n        };\n        img.onload = function () {\n          return resolve(true);\n        };\n      }));\n    }\n    return Promise.resolve();\n  } catch (e) {\n    return Promise.reject(e);\n  }\n};\nfunction isObject(item) {\n  return item && typeof item === 'object' && !Array.isArray(item);\n}\nfunction mergeDeep(target, source) {\n  var output = Object.assign({}, target);\n  if (isObject(target) && isObject(source)) {\n    Object.keys(source).forEach(function (key) {\n      if (isObject(source[key])) {\n        var _Object$assign;\n        if (!(key in target)) Object.assign(output, (_Object$assign = {}, _Object$assign[key] = source[key], _Object$assign));else output[key] = mergeDeep(target[key], source[key]);\n      } else {\n        var _Object$assign2;\n        Object.assign(output, (_Object$assign2 = {}, _Object$assign2[key] = source[key], _Object$assign2));\n      }\n    });\n  }\n  return output;\n}\nfunction formatActionLink(link) {\n  if (!link) return;\n  if (link.startsWith('http') || link.startsWith('/')) {\n    return link;\n  } else {\n    return \"https://\" + link;\n  }\n}\nfunction getLongFormattedTime(value, unit) {\n  switch (unit) {\n    case 'second':\n      return 'a minute';\n    case 'minute':\n      return value === 1 ? value + \" minute\" : value + \" minutes\";\n    case 'hour':\n      return value === 1 ? value + \" hour\" : value + \" hours\";\n    case 'day':\n      return value === 1 ? value + \" day\" : value + \" days\";\n    case 'week':\n      return value === 1 ? value + \" week\" : value + \" weeks\";\n    case 'month':\n      return value === 1 ? value + \" month\" : value + \" months\";\n    case 'year':\n      return value === 1 ? value + \" year\" : value + \" years\";\n    default:\n      return value;\n  }\n}\nfunction getShortFormattedTime(value, unit) {\n  switch (unit) {\n    case 'second':\n      return '1m';\n    case 'minute':\n      return value + \"m\";\n    case 'hour':\n      return value + \"h\";\n    case 'day':\n      return value + \"d\";\n    case 'week':\n      return value + \"w\";\n    case 'month':\n      return value + \"mo\";\n    case 'year':\n      return value + \"y\";\n    default:\n      return value;\n  }\n}\n\nvar AvatarIcon = function AvatarIcon(_ref) {\n  var type = _ref.type;\n  if (type === 'dark') {\n    return /*#__PURE__*/React__default.createElement(\"svg\", {\n      width: \"36\",\n      height: \"36\",\n      viewBox: \"0 0 36 36\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, /*#__PURE__*/React__default.createElement(\"circle\", {\n      cx: \"18\",\n      cy: \"18\",\n      r: \"18\",\n      fill: \"#334155\"\n    }), /*#__PURE__*/React__default.createElement(\"path\", {\n      d: \"M23.8641 14.2836C23.8641 17.3522 21.4556 19.8399 18.4844 19.8399C15.5132 19.8399 13.1047 17.3522 13.1047 14.2836C13.1047 11.215 15.5132 8.72754 18.4844 8.72754C21.4556 8.72754 23.8641 11.215 23.8641 14.2836Z\",\n      fill: \"#94A3B8\"\n    }), /*#__PURE__*/React__default.createElement(\"path\", {\n      d: \"M23.8643 20.9316H13.1051C11.1039 20.9316 9.37694 22.0734 8.4502 23.75C10.6277 27.0754 14.3128 29.2659 18.4848 29.2659C22.6568 29.2659 26.3418 27.0754 28.5195 23.75C27.5913 22.0734 25.866 20.9316 23.8645 20.9316H23.8643Z\",\n      fill: \"#94A3B8\"\n    }));\n  }\n  return /*#__PURE__*/React__default.createElement(\"svg\", {\n    width: \"36\",\n    height: \"36\",\n    viewBox: \"0 0 36 36\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React__default.createElement(\"circle\", {\n    cx: \"18\",\n    cy: \"18\",\n    r: \"18\",\n    fill: \"#CBD5E1\"\n  }), /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M23.8641 14.2836C23.8641 17.3522 21.4556 19.8399 18.4844 19.8399C15.5132 19.8399 13.1047 17.3522 13.1047 14.2836C13.1047 11.215 15.5132 8.72754 18.4844 8.72754C21.4556 8.72754 23.8641 11.215 23.8641 14.2836Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M23.8643 20.9316H13.1051C11.1039 20.9316 9.37694 22.0734 8.4502 23.75C10.6277 27.0754 14.3128 29.2659 18.4848 29.2659C22.6568 29.2659 26.3418 27.0754 28.5195 23.75C27.5913 22.0734 25.866 20.9316 23.8645 20.9316H23.8643Z\",\n    fill: \"white\"\n  }));\n};\n\nvar MoreIcon = function MoreIcon(_ref) {\n  var style = _ref.style;\n  var height = (style === null || style === void 0 ? void 0 : style.height) || 20;\n  var width = (style === null || style === void 0 ? void 0 : style.width) || 20;\n  var color = (style === null || style === void 0 ? void 0 : style.color) || lightColors.secondaryText;\n  return /*#__PURE__*/React__default.createElement(\"svg\", {\n    width: width,\n    height: height,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M12 13C12.5523 13 13 12.5523 13 12C13 11.4477 12.5523 11 12 11C11.4477 11 11 11.4477 11 12C11 12.5523 11.4477 13 12 13Z\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M19 13C19.5523 13 20 12.5523 20 12C20 11.4477 19.5523 11 19 11C18.4477 11 18 11.4477 18 12C18 12.5523 18.4477 13 19 13Z\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M5 13C5.55228 13 6 12.5523 6 12C6 11.4477 5.55228 11 5 11C4.44772 11 4 11.4477 4 12C4 12.5523 4.44772 13 5 13Z\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }));\n};\n\nvar PinnedNotificationIcon = function PinnedNotificationIcon(_ref) {\n  var style = _ref.style;\n  var height = (style === null || style === void 0 ? void 0 : style.height) || 13;\n  var width = (style === null || style === void 0 ? void 0 : style.width) || 13;\n  var color = (style === null || style === void 0 ? void 0 : style.color) || '#DC6803';\n  return /*#__PURE__*/React__default.createElement(\"svg\", {\n    width: width,\n    height: height,\n    viewBox: \"0 0 16 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M7.58984 2.9305C7.38193 2.44536 7.27797 2.2028 7.10998 2.09261C6.96308 1.99626 6.78408 1.96179 6.6119 1.99669C6.415 2.03661 6.22839 2.22321 5.85518 2.59643L2.42642 6.02519C2.0532 6.39841 1.86659 6.58502 1.82668 6.78191C1.79177 6.95409 1.82624 7.13309 1.9226 7.28C2.03278 7.44799 2.27535 7.55194 2.76048 7.75986L4.42339 8.47253C4.49393 8.50277 4.5292 8.51788 4.56228 8.53678C4.59166 8.55356 4.61972 8.57256 4.64622 8.59361C4.67605 8.6173 4.70318 8.64444 4.75745 8.69871L5.79805 9.7393C5.88293 9.82418 5.92537 9.86662 5.95909 9.91498C5.98903 9.9579 6.0138 10.0042 6.03291 10.0529C6.05444 10.1078 6.06621 10.1666 6.08975 10.2844L6.57835 12.7273C6.70532 13.3622 6.76881 13.6796 6.93618 13.8281C7.08198 13.9575 7.27711 14.0166 7.47019 13.9898C7.69183 13.9591 7.92074 13.7302 8.37855 13.2724L13.1024 8.54856C13.5602 8.09075 13.7891 7.86185 13.8198 7.64021C13.8466 7.44713 13.7875 7.252 13.6581 7.10619C13.5096 6.93882 13.1922 6.87534 12.5573 6.74836L10.1143 6.25977C9.99663 6.23622 9.93777 6.22445 9.88289 6.20293C9.83418 6.18382 9.78788 6.15904 9.74496 6.12911C9.69661 6.09538 9.65416 6.05294 9.56928 5.96806L8.52869 4.92747C8.47442 4.8732 8.44729 4.84606 8.42359 4.81624C8.40255 4.78974 8.38355 4.76168 8.36676 4.73229C8.34787 4.69922 8.33275 4.66395 8.30252 4.5934L7.58984 2.9305Z\",\n    fill: color\n  }), /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M10.7405 10.9105L14.5117 14.6817M8.52869 4.92747L9.56928 5.96806C9.65416 6.05294 9.69661 6.09538 9.74496 6.12911C9.78788 6.15904 9.83418 6.18382 9.88289 6.20293C9.93777 6.22445 9.99663 6.23622 10.1143 6.25977L12.5573 6.74836C13.1922 6.87534 13.5096 6.93882 13.6581 7.10619C13.7875 7.252 13.8466 7.44713 13.8198 7.64021C13.7891 7.86185 13.5602 8.09075 13.1024 8.54856L8.37855 13.2724C7.92074 13.7302 7.69183 13.9591 7.47019 13.9898C7.27711 14.0166 7.08198 13.9575 6.93618 13.8281C6.76881 13.6796 6.70532 13.3622 6.57835 12.7273L6.08975 10.2844C6.06621 10.1666 6.05444 10.1078 6.03291 10.0529C6.0138 10.0042 5.98903 9.9579 5.95909 9.91498C5.92537 9.86662 5.88293 9.82418 5.79805 9.7393L4.75745 8.69871C4.70318 8.64444 4.67605 8.6173 4.64622 8.59361C4.61972 8.57256 4.59166 8.55356 4.56228 8.53678C4.5292 8.51788 4.49393 8.50277 4.42339 8.47253L2.76048 7.75986C2.27535 7.55194 2.03278 7.44799 1.9226 7.28C1.82624 7.13309 1.79177 6.95409 1.82668 6.78191C1.86659 6.58502 2.0532 6.39841 2.42642 6.02519L5.85517 2.59643C6.22839 2.22321 6.415 2.03661 6.6119 1.99669C6.78408 1.96179 6.96308 1.99626 7.10998 2.09261C7.27797 2.2028 7.38193 2.44536 7.58984 2.9305L8.30252 4.5934C8.33275 4.66395 8.34787 4.69922 8.36676 4.73229C8.38355 4.76168 8.40255 4.78974 8.42359 4.81624C8.44729 4.84606 8.47442 4.8732 8.52869 4.92747Z\",\n    stroke: color,\n    strokeWidth: \"1.33333\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }));\n};\n\nvar UnReadIcon = function UnReadIcon(_ref) {\n  var style = _ref.style;\n  var height = (style === null || style === void 0 ? void 0 : style.height) || 16;\n  var width = (style === null || style === void 0 ? void 0 : style.width) || 16;\n  var color = (style === null || style === void 0 ? void 0 : style.color) || lightColors.primaryText;\n  return /*#__PURE__*/React__default.createElement(\"svg\", {\n    width: width,\n    height: height,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React__default.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M14.416 3H4.00013C2.34327 3 1.00013 4.34315 1.00013 6V6.98313C0.999958 6.99375 0.999958 7.00437 1.00013 7.01499V18C1.00013 19.6569 2.34327 21 4.00013 21H20.0001C21.657 21 23.0001 19.6569 23.0001 18V9.21078H21.0001V18C21.0001 18.5523 20.5524 19 20.0001 19H4.00013C3.44784 19 3.00013 18.5523 3.00013 18V8.82027L10.4338 13.544L10.4392 13.5474C10.9071 13.8405 11.448 13.996 12.0001 13.996C12.5522 13.996 13.0932 13.8405 13.5611 13.5474L13.5665 13.544L19.5 9.21078H16.5L12.4992 11.8526L12.497 11.854C12.3479 11.9468 12.1758 11.996 12.0001 11.996C11.8245 11.996 11.6524 11.9468 11.5033 11.854L3.00013 6.45063V6C3.00013 5.44772 3.44784 5 4.00013 5H14.416V3Z\",\n    fill: color\n  }), /*#__PURE__*/React__default.createElement(\"circle\", {\n    cx: \"20\",\n    cy: \"4\",\n    r: \"4\",\n    fill: color\n  }));\n};\n\nvar ReadIcon = function ReadIcon(_ref) {\n  var style = _ref.style;\n  var height = (style === null || style === void 0 ? void 0 : style.height) || 16;\n  var width = (style === null || style === void 0 ? void 0 : style.width) || 16;\n  var color = (style === null || style === void 0 ? void 0 : style.color) || lightColors.primaryText;\n  return /*#__PURE__*/React__default.createElement(\"svg\", {\n    width: width,\n    height: height,\n    viewBox: \"0 0 16 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M14.1334 6.26471C14.4667 6.51805 14.6667 6.91138 14.6667 7.33138V13.998C14.6667 14.3517 14.5262 14.6908 14.2762 14.9409C14.0261 15.1909 13.687 15.3314 13.3334 15.3314H2.66671C2.31309 15.3314 1.97395 15.1909 1.7239 14.9409C1.47385 14.6908 1.33337 14.3517 1.33337 13.998V7.33138C1.33337 7.12439 1.38157 6.92024 1.47414 6.7351C1.56671 6.54995 1.70111 6.38891 1.86671 6.26471L7.20004 2.26471C7.43084 2.09162 7.71155 1.99805 8.00004 1.99805C8.28853 1.99805 8.56925 2.09162 8.80004 2.26471L14.1334 6.26471Z\",\n    stroke: color,\n    strokeWidth: \"1.33333\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M14.6667 7.33105L8.68668 11.1311C8.48086 11.26 8.24289 11.3284 8.00001 11.3284C7.75713 11.3284 7.51916 11.26 7.31334 11.1311L1.33334 7.33105\",\n    stroke: color,\n    strokeWidth: \"1.33333\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }));\n};\n\nvar ArchiveIcon = function ArchiveIcon(_ref) {\n  var style = _ref.style;\n  var height = (style === null || style === void 0 ? void 0 : style.height) || 17;\n  var width = (style === null || style === void 0 ? void 0 : style.width) || 16;\n  var color = (style === null || style === void 0 ? void 0 : style.color) || lightColors.secondaryText;\n  return /*#__PURE__*/React__default.createElement(\"svg\", {\n    width: width,\n    height: height,\n    viewBox: \"0 0 16 17\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M14 2.33789H1.99998C1.63179 2.33789 1.33331 2.63637 1.33331 3.00456V5.00456C1.33331 5.37275 1.63179 5.67122 1.99998 5.67122H14C14.3682 5.67122 14.6666 5.37275 14.6666 5.00456V3.00456C14.6666 2.63637 14.3682 2.33789 14 2.33789Z\",\n    stroke: color,\n    strokeWidth: \"1.33333\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M2.66669 5.67188V13.0052C2.66669 13.3588 2.80716 13.698 3.05721 13.948C3.30726 14.1981 3.6464 14.3385 4.00002 14.3385H12C12.3536 14.3385 12.6928 14.1981 12.9428 13.948C13.1929 13.698 13.3334 13.3588 13.3334 13.0052V5.67188\",\n    stroke: color,\n    strokeWidth: \"1.33333\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }), /*#__PURE__*/React__default.createElement(\"path\", {\n    d: \"M6.66669 8.33789H9.33335\",\n    stroke: color,\n    strokeWidth: \"1.33333\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }));\n};\n\nvar _templateObject$2, _templateObject2$1, _templateObject3$1, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11, _templateObject12, _templateObject13, _templateObject14, _templateObject15, _templateObject16, _templateObject17, _templateObject18, _templateObject19, _templateObject20, _templateObject21, _templateObject22, _templateObject23, _templateObject24, _templateObject25, _templateObject26, _templateObject27;\nfunction ExpiryTime(_ref) {\n  var dateInput = _ref.dateInput,\n    style = _ref.style;\n  var date = dateInput;\n  var _useState = React.useState(Date.now()),\n    setTime = _useState[1];\n  React.useEffect(function () {\n    var interval = setInterval(function () {\n      return setTime(Date.now());\n    }, 10000);\n    return function () {\n      clearInterval(interval);\n    };\n  }, []);\n  var isExpiring = date - Date.now() <= 3600000;\n  var expiredAlready = Date.now() >= date;\n  if (typeof dateInput === 'number') {\n    return /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(ExpiresText, {\n      style: _extends({}, style, {\n        color: isExpiring ? (style === null || style === void 0 ? void 0 : style.expiringColor) || lightColors.error : (style === null || style === void 0 ? void 0 : style.color) || lightColors.secondaryText,\n        backgroundColor: isExpiring ? (style === null || style === void 0 ? void 0 : style.expiringBackgroundColor) || 'rgba(217, 45, 32, 0.09)' : (style === null || style === void 0 ? void 0 : style.backgroundColor) || 'rgba(100, 116, 139, 0.09)'\n      })\n    }, \"Expires in\", ' ', expiredAlready ? 'a minute' : /*#__PURE__*/React__default.createElement(TimeAgo, {\n      date: date,\n      live: false,\n      formatter: getLongFormattedTime\n    })));\n  } else {\n    return null;\n  }\n}\nfunction Notification(_ref2) {\n  var _notification$bodyTex, _notification$bodyTex2, _message$actions, _message$actions2, _message$avatar2, _message$text, _message$text$replace, _message$text$replace2, _message$subtext, _message$subtext2, _notification$actions, _notification$actions2, _notification$actions3, _notification$actions4, _notification$actions5, _notification$actions6, _notification$actions7, _notification$actions8, _notification$actions9;\n  var notificationData = _ref2.notificationData,\n    handleActionClick = _ref2.handleActionClick;\n  var _useState2 = React.useState(false),\n    validAvatar = _useState2[0],\n    setValidAvatar = _useState2[1];\n  var _useState3 = React.useState(false),\n    showMore = _useState3[0],\n    setShowMore = _useState3[1];\n  var _useState4 = React.useState(false),\n    moreOpen = _useState4[0],\n    setMoreOpen = _useState4[1];\n  var message = notificationData.message,\n    seenOn = notificationData.seen_on,\n    createdOn = notificationData.created_on;\n  var _useInbox = useInbox(),\n    notificationComponent = _useInbox.notificationComponent,\n    hideAvatar = _useInbox.hideAvatar,\n    inbox = _useInbox.inbox,\n    themeType = _useInbox.themeType;\n  var _useTheme = useTheme(),\n    notification = _useTheme.notification;\n  var blockquoteColor = (notification === null || notification === void 0 ? void 0 : (_notification$bodyTex = notification.bodyText) === null || _notification$bodyTex === void 0 ? void 0 : _notification$bodyTex.blockquoteColor) || 'rgba(100, 116, 139, 0.3)';\n  var linkColor = (notification === null || notification === void 0 ? void 0 : (_notification$bodyTex2 = notification.bodyText) === null || _notification$bodyTex2 === void 0 ? void 0 : _notification$bodyTex2.linkColor) || lightColors.primary;\n  var actionOne = message === null || message === void 0 ? void 0 : (_message$actions = message.actions) === null || _message$actions === void 0 ? void 0 : _message$actions[0];\n  var actionTwo = message === null || message === void 0 ? void 0 : (_message$actions2 = message.actions) === null || _message$actions2 === void 0 ? void 0 : _message$actions2[1];\n  var hasButtons = actionOne || actionTwo;\n  React.useEffect(function () {\n    var _message$avatar;\n    var isValidAvatar = isImgUrl(message === null || message === void 0 ? void 0 : (_message$avatar = message.avatar) === null || _message$avatar === void 0 ? void 0 : _message$avatar.avatar_url);\n    isValidAvatar.then(function (res) {\n      return setValidAvatar(res);\n    });\n  }, [notificationData]);\n  if (notificationComponent) {\n    var NotificationComponent = notificationComponent;\n    return /*#__PURE__*/React__default.createElement(NotificationComponent, {\n      notificationData: notificationData\n    });\n  }\n  return /*#__PURE__*/React__default.createElement(Container, {\n    style: notification === null || notification === void 0 ? void 0 : notification.container,\n    read: !!seenOn,\n    onMouseEnter: function onMouseEnter() {\n      setShowMore(true);\n      setMoreOpen(false);\n    },\n    onMouseLeave: function onMouseLeave() {\n      setShowMore(false);\n      setMoreOpen(false);\n    },\n    onClick: function onClick(e) {\n      if (moreOpen) {\n        e.stopPropagation();\n        setMoreOpen(false);\n      }\n    }\n  }, notificationData.is_pinned && /*#__PURE__*/React__default.createElement(PinnedView, {\n    hideAvatar: hideAvatar\n  }, /*#__PURE__*/React__default.createElement(PinnedNotificationIcon, {\n    style: notification === null || notification === void 0 ? void 0 : notification.pinnedIcon\n  }), /*#__PURE__*/React__default.createElement(PinnedNotificationText, {\n    style: notification === null || notification === void 0 ? void 0 : notification.pinnedText\n  }, \"Pinned\")), /*#__PURE__*/React__default.createElement(NotificationView, null, /*#__PURE__*/React__default.createElement(LeftView, null, /*#__PURE__*/React__default.createElement(LeftAvatarView, null, /*#__PURE__*/React__default.createElement(UnseenDot, {\n    style: notification === null || notification === void 0 ? void 0 : notification.unseenDot,\n    show: !seenOn\n  }), !hideAvatar && /*#__PURE__*/React__default.createElement(AvatarView, {\n    onClick: function onClick(e) {\n      var avatarData = message === null || message === void 0 ? void 0 : message.avatar;\n      handleActionClick(e, {\n        type: 'avatar',\n        url: avatarData === null || avatarData === void 0 ? void 0 : avatarData.action_url,\n        target: avatarData === null || avatarData === void 0 ? void 0 : avatarData.open_in_new_tab\n      });\n    }\n  }, message !== null && message !== void 0 && (_message$avatar2 = message.avatar) !== null && _message$avatar2 !== void 0 && _message$avatar2.avatar_url && validAvatar ? /*#__PURE__*/React__default.createElement(AvatarImage, {\n    src: message.avatar.avatar_url,\n    alt: \"avatar\",\n    style: notification === null || notification === void 0 ? void 0 : notification.avatar\n  }) : /*#__PURE__*/React__default.createElement(AvatarIcon, {\n    type: themeType\n  }))), /*#__PURE__*/React__default.createElement(ContentView, null, message.header && /*#__PURE__*/React__default.createElement(HeaderText, {\n    style: notification === null || notification === void 0 ? void 0 : notification.headerText\n  }, message.header), /*#__PURE__*/React__default.createElement(BodyText, {\n    style: notification === null || notification === void 0 ? void 0 : notification.bodyText\n  }, /*#__PURE__*/React__default.createElement(Markdown, {\n    components: {\n      a: function a(_ref3) {\n        var children = _ref3.children,\n          href = _ref3.href;\n        return /*#__PURE__*/React__default.createElement(\"span\", {\n          onClick: function onClick(e) {\n            e.preventDefault();\n            handleActionClick(e, {\n              type: 'markdown_link',\n              url: href\n            });\n          },\n          style: {\n            color: linkColor,\n            textDecoration: 'none'\n          }\n        }, children);\n      },\n      p: function p(_ref4) {\n        var children = _ref4.children;\n        return /*#__PURE__*/React__default.createElement(\"p\", {\n          style: {\n            margin: 0,\n            overflowWrap: 'anywhere'\n          }\n        }, children);\n      },\n      blockquote: function blockquote(_ref5) {\n        var children = _ref5.children;\n        return /*#__PURE__*/React__default.createElement(\"blockquote\", {\n          style: {\n            margin: 0,\n            paddingLeft: 10,\n            borderLeft: \"3px \" + blockquoteColor + \" solid\",\n            marginBottom: 5,\n            marginTop: 5\n          }\n        }, children);\n      },\n      ul: function ul(_ref6) {\n        var children = _ref6.children;\n        return /*#__PURE__*/React__default.createElement(\"ul\", {\n          style: {\n            whiteSpace: 'normal',\n            margin: 0,\n            paddingLeft: 10\n          }\n        }, children);\n      },\n      ol: function ol(_ref7) {\n        var children = _ref7.children;\n        return /*#__PURE__*/React__default.createElement(\"ol\", {\n          style: {\n            whiteSpace: 'normal',\n            margin: 0,\n            paddingLeft: 10\n          }\n        }, children);\n      },\n      img: function img(props) {\n        return /*#__PURE__*/React__default.createElement(\"img\", _extends({\n          style: {\n            maxWidth: '100%',\n            objectFit: 'contain'\n          }\n        }, props));\n      }\n    }\n  }, message === null || message === void 0 ? void 0 : (_message$text = message.text) === null || _message$text === void 0 ? void 0 : (_message$text$replace = _message$text.replaceAll('\\\\\\n', '&nbsp;')) === null || _message$text$replace === void 0 ? void 0 : (_message$text$replace2 = _message$text$replace.replaceAll('\\n', '  \\n')) === null || _message$text$replace2 === void 0 ? void 0 : _message$text$replace2.replaceAll('&nbsp;', '&nbsp;  \\n'))), !!(message !== null && message !== void 0 && (_message$subtext = message.subtext) !== null && _message$subtext !== void 0 && _message$subtext.text) && /*#__PURE__*/React__default.createElement(SubTextView, {\n    link: message === null || message === void 0 ? void 0 : (_message$subtext2 = message.subtext) === null || _message$subtext2 === void 0 ? void 0 : _message$subtext2.action_url,\n    onClick: function onClick(e) {\n      var subTextData = message === null || message === void 0 ? void 0 : message.subtext;\n      handleActionClick(e, {\n        type: 'subtext',\n        url: subTextData === null || subTextData === void 0 ? void 0 : subTextData.action_url,\n        target: subTextData === null || subTextData === void 0 ? void 0 : subTextData.open_in_new_tab\n      });\n    }\n  }, /*#__PURE__*/React__default.createElement(SubText, {\n    style: notification === null || notification === void 0 ? void 0 : notification.subtext\n  }, message.subtext.text)), notificationData.expiry && (notificationData === null || notificationData === void 0 ? void 0 : notificationData.is_expiry_visible) && /*#__PURE__*/React__default.createElement(ExpiryTime, {\n    dateInput: notificationData.expiry,\n    style: notification === null || notification === void 0 ? void 0 : notification.expiresText\n  }), hasButtons && /*#__PURE__*/React__default.createElement(ButtonContainer, null, actionOne && /*#__PURE__*/React__default.createElement(ButtonView, {\n    style: notification === null || notification === void 0 ? void 0 : (_notification$actions = notification.actions) === null || _notification$actions === void 0 ? void 0 : (_notification$actions2 = _notification$actions[0]) === null || _notification$actions2 === void 0 ? void 0 : _notification$actions2.container,\n    key: actionOne.id,\n    onClick: function onClick(e) {\n      handleActionClick(e, {\n        type: 'action_button',\n        url: actionOne.url,\n        target: actionOne.open_in_new_tab\n      });\n    }\n  }, /*#__PURE__*/React__default.createElement(ButtonText, {\n    style: notification === null || notification === void 0 ? void 0 : (_notification$actions3 = notification.actions) === null || _notification$actions3 === void 0 ? void 0 : (_notification$actions4 = _notification$actions3[0]) === null || _notification$actions4 === void 0 ? void 0 : _notification$actions4.text\n  }, actionOne.name)), actionTwo && /*#__PURE__*/React__default.createElement(ButtonOutlineView, {\n    key: actionTwo.id,\n    style: notification === null || notification === void 0 ? void 0 : (_notification$actions5 = notification.actions) === null || _notification$actions5 === void 0 ? void 0 : (_notification$actions6 = _notification$actions5[1]) === null || _notification$actions6 === void 0 ? void 0 : _notification$actions6.container,\n    onClick: function onClick(e) {\n      handleActionClick(e, {\n        type: 'action_button',\n        url: actionTwo.url,\n        target: actionTwo.open_in_new_tab\n      });\n    }\n  }, /*#__PURE__*/React__default.createElement(ButtonOutlineText, {\n    style: notification === null || notification === void 0 ? void 0 : (_notification$actions7 = notification.actions) === null || _notification$actions7 === void 0 ? void 0 : (_notification$actions8 = _notification$actions7[1]) === null || _notification$actions8 === void 0 ? void 0 : _notification$actions8.text\n  }, actionTwo.name))))), /*#__PURE__*/React__default.createElement(RightView, null, /*#__PURE__*/React__default.createElement(CreatedText, {\n    style: notification === null || notification === void 0 ? void 0 : notification.createdOnText\n  }, /*#__PURE__*/React__default.createElement(TimeAgo, {\n    date: createdOn,\n    live: false,\n    formatter: getShortFormattedTime\n  })), /*#__PURE__*/React__default.createElement(CMenuView, {\n    showMore: showMore\n  }, /*#__PURE__*/React__default.createElement(CMenuButton, {\n    hoverBGColor: notification === null || notification === void 0 ? void 0 : (_notification$actions9 = notification.actionsMenuIcon) === null || _notification$actions9 === void 0 ? void 0 : _notification$actions9.hoverBackgroundColor,\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      setMoreOpen(function (prev) {\n        return !prev;\n      });\n    }\n  }, /*#__PURE__*/React__default.createElement(MoreIcon, {\n    style: notification === null || notification === void 0 ? void 0 : notification.actionsMenuIcon\n  })), /*#__PURE__*/React__default.createElement(CMenuPopup, {\n    moreOpen: moreOpen,\n    style: notification === null || notification === void 0 ? void 0 : notification.actionsMenu\n  }, notificationData.seen_on ? /*#__PURE__*/React__default.createElement(CMenuItem, {\n    style: notification === null || notification === void 0 ? void 0 : notification.actionsMenuItem,\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      inbox.feed.markUnRead(notificationData.n_id);\n      setMoreOpen(false);\n    }\n  }, /*#__PURE__*/React__default.createElement(UnReadIcon, {\n    style: notification === null || notification === void 0 ? void 0 : notification.actionsMenuItemIcon\n  }), /*#__PURE__*/React__default.createElement(CMenuText, {\n    style: notification === null || notification === void 0 ? void 0 : notification.actionsMenuItemText\n  }, \"Mark as unread\")) : /*#__PURE__*/React__default.createElement(CMenuItem, {\n    style: notification === null || notification === void 0 ? void 0 : notification.actionsMenuItem,\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      inbox.feed.markRead(notificationData.n_id);\n      setMoreOpen(false);\n    }\n  }, /*#__PURE__*/React__default.createElement(ReadIcon, {\n    style: notification === null || notification === void 0 ? void 0 : notification.actionsMenuItemIcon\n  }), /*#__PURE__*/React__default.createElement(CMenuText, {\n    style: notification === null || notification === void 0 ? void 0 : notification.actionsMenuItemText\n  }, \"Mark as read\")), !(notificationData !== null && notificationData !== void 0 && notificationData.archived) && /*#__PURE__*/React__default.createElement(CMenuItem, {\n    style: notification === null || notification === void 0 ? void 0 : notification.actionsMenuItem,\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      inbox.feed.markArchived(notificationData.n_id);\n    }\n  }, /*#__PURE__*/React__default.createElement(ArchiveIcon, {\n    style: notification === null || notification === void 0 ? void 0 : notification.actionsMenuItemIcon\n  }), /*#__PURE__*/React__default.createElement(CMenuText, {\n    style: notification === null || notification === void 0 ? void 0 : notification.actionsMenuItemText\n  }, \"Archive\")))))));\n}\nvar Container = styled.div(_templateObject$2 || (_templateObject$2 = _taggedTemplateLiteralLoose([\"\\n  padding: 16px;\\n  cursor: pointer;\\n  background-color: \", \";\\n  border-bottom: 0.5px solid \", \";\\n  &:hover {\\n    background-color: \", \"\\n\"])), function (props) {\n  var _props$style, _props$style2;\n  return props.read ? (props === null || props === void 0 ? void 0 : (_props$style = props.style) === null || _props$style === void 0 ? void 0 : _props$style.readBackgroundColor) || lightColors.main : (props === null || props === void 0 ? void 0 : (_props$style2 = props.style) === null || _props$style2 === void 0 ? void 0 : _props$style2.unreadBackgroundColor) || '#edf3ff';\n}, lightColors.border, function (props) {\n  var _props$style3;\n  return (props === null || props === void 0 ? void 0 : (_props$style3 = props.style) === null || _props$style3 === void 0 ? void 0 : _props$style3.hoverBackgroundColor) || '#DBE7FF';\n});\nvar PinnedView = styled.div(_templateObject2$1 || (_templateObject2$1 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  align-items: center;\\n  margin-left: \", \";\\n  gap: 4px;\\n\"])), function (props) {\n  return props.hideAvatar ? '0px' : '52px';\n});\nvar PinnedNotificationText = styled(HelperText)(_templateObject3$1 || (_templateObject3$1 = _taggedTemplateLiteralLoose([\"\"])));\nvar SubText = styled(HelperText)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteralLoose([\"\\n  color: #64748b;\\n\"])));\nvar SubTextView = styled.div(_templateObject5 || (_templateObject5 = _taggedTemplateLiteralLoose([\"\\n  text-decoration: none;\\n  overflow-wrap: anywhere;\\n  display: inline-block;\\n  &:hover {\\n    text-decoration: \", \";\\n    text-decoration-color: \", \";\\n  }\\n\"])), function (props) {\n  return props.link ? 'underline' : 'none';\n}, lightColors.secondaryText);\nvar ExpiresText = styled(HelperText)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 8px;\\n  display: inline-block;\\n  padding: 1px 6px;\\n  border-radius: 4px;\\n\"])));\nvar NotificationView = styled.div(_templateObject7 || (_templateObject7 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: flex-start;\\n  justify-content: space-between;\\n\"])));\nvar HeaderText = styled(CText)(_templateObject8 || (_templateObject8 = _taggedTemplateLiteralLoose([\"\\n  margin: 8px 0px 0px 0px;\\n  overflow-wrap: anywhere;\\n  line-height: 18px;\\n  font-weight: 700;\\n\"])));\nvar BodyText = styled.div(_templateObject9 || (_templateObject9 = _taggedTemplateLiteralLoose([\"\\n  font-size: 14px;\\n  line-height: 20px;\\n  margin: 8px 0px 6px;\\n  font-weight: 400;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,\\n    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\\n  color: \", \";\\n\"])), lightColors.secondaryText);\nvar UnseenDot = styled.div(_templateObject10 || (_templateObject10 = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \";\\n  border-radius: 50%;\\n  width: 7px;\\n  height: 7px;\\n  visibility: \", \";\\n\"])), lightColors.primary, function (props) {\n  return props.show ? 'visible' : 'hidden';\n});\nvar CreatedText = styled(HelperText)(_templateObject11 || (_templateObject11 = _taggedTemplateLiteralLoose([\"\"])));\nvar ButtonContainer = styled.div(_templateObject12 || (_templateObject12 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: row;\\n  gap: 10px;\\n  margin-bottom: 6px;\\n  margin-top: 12px;\\n  overflow-wrap: anywhere;\\n\"])));\nvar ButtonView = styled.div(_templateObject13 || (_templateObject13 = _taggedTemplateLiteralLoose([\"\\n  max-width: 50%;\\n  background: \", \";\\n  border-radius: 5px;\\n  text-decoration: none;\\n  padding: 4px 16px;\\n  &:hover {\\n    background-color: \", \" !important;\\n  }\\n\"])), lightColors.primary, function (props) {\n  var _props$style4;\n  return ((_props$style4 = props.style) === null || _props$style4 === void 0 ? void 0 : _props$style4.hoverBackgroundColor) || '#265cbf';\n});\nvar ButtonText = styled(CText)(_templateObject14 || (_templateObject14 = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n  text-align: center;\\n  word-break: break-all;\\n  font-weight: 600;\\n  font-size: 13px;\\n\"])), lightColors.main);\nvar ButtonOutlineView = styled(ButtonView)(_templateObject15 || (_templateObject15 = _taggedTemplateLiteralLoose([\"\\n  background: \", \";\\n  border-color: \", \";\\n  border-style: solid;\\n  border-width: 1.2px;\\n  &:hover {\\n    background-color: \", \" !important;\\n  }\\n\"])), lightColors.main, lightColors.border, function (props) {\n  var _props$style5;\n  return ((_props$style5 = props.style) === null || _props$style5 === void 0 ? void 0 : _props$style5.hoverBackgroundColor) || '#f7f7f9';\n});\nvar ButtonOutlineText = styled(ButtonText)(_templateObject16 || (_templateObject16 = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n\"])), lightColors.secondaryText);\nvar LeftView = styled.div(_templateObject17 || (_templateObject17 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  overflow-wrap: anywhere;\\n  flex-grow: 1;\\n\"])));\nvar LeftAvatarView = styled.div(_templateObject18 || (_templateObject18 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  margin-top: 8px;\\n  margin-right: 12px;\\n\"])));\nvar AvatarView = styled.div(_templateObject19 || (_templateObject19 = _taggedTemplateLiteralLoose([\"\"])));\nvar ContentView = styled.div(_templateObject20 || (_templateObject20 = _taggedTemplateLiteralLoose([\"\\n  flex: 1;\\n\"])));\nvar RightView = styled.div(_templateObject21 || (_templateObject21 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-top: 5px;\\n  max-width: 40px;\\n  gap: 5px;\\n\"])));\nvar AvatarImage = styled.img(_templateObject22 || (_templateObject22 = _taggedTemplateLiteralLoose([\"\\n  height: 36px;\\n  width: 36px;\\n  border-radius: 100px;\\n\"])));\nvar CMenuPopup = styled.div(_templateObject23 || (_templateObject23 = _taggedTemplateLiteralLoose([\"\\n  position: absolute;\\n  right: 0px;\\n  display: \", \";\\n  min-width: 150px;\\n  padding: 2px;\\n  background-color: \", \";\\n  border: 1px solid;\\n  border-color: \", \";\\n  border-radius: 4px;\\n  box-shadow: 1px 1px 20px 1px rgba(0, 0, 0, 0.1);\\n  z-index: 100;\\n\"])), function (props) {\n  return props.moreOpen ? 'block' : 'none';\n}, lightColors.main, lightColors.border);\nvar CMenuItem = styled.div(_templateObject24 || (_templateObject24 = _taggedTemplateLiteralLoose([\"\\n  padding: 7px;\\n  border-radius: 4px;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  &:hover {\\n    background-color: \", \";\\n  }\\n\"])), function (props) {\n  var _props$style6;\n  return (props === null || props === void 0 ? void 0 : (_props$style6 = props.style) === null || _props$style6 === void 0 ? void 0 : _props$style6.hoverBackgroundColor) || 'rgba(100, 116, 139, 0.09)';\n});\nvar CMenuText = styled(CText)(_templateObject25 || (_templateObject25 = _taggedTemplateLiteralLoose([\"\"])));\nvar CMenuView = styled.div(_templateObject26 || (_templateObject26 = _taggedTemplateLiteralLoose([\"\\n  position: relative;\\n  visibility: \", \";\\n\"])), function (props) {\n  return props !== null && props !== void 0 && props.showMore ? 'visible' : 'hidden';\n});\nvar CMenuButton = styled.div(_templateObject27 || (_templateObject27 = _taggedTemplateLiteralLoose([\"\\n  height: 20px;\\n  width: 20px;\\n  &:hover {\\n    border-radius: 50%;\\n    background-color: \", \";\\n  }\\n\"])), function (props) {\n  return (props === null || props === void 0 ? void 0 : props.hoverBGColor) || 'rgba(100, 116, 139, 0.09)';\n});\n\nfunction getURLTarget(target) {\n  return target ? '_blank' : '_self';\n}\nfunction ClickableNotification(_ref) {\n  var notificationData = _ref.notificationData;\n  var _useInbox = useInbox(),\n    notificationClickHandler = _useInbox.notificationClickHandler,\n    inbox = _useInbox.inbox;\n  var cardClickNavigation = function cardClickNavigation() {\n    if (typeof notificationClickHandler === 'function') {\n      notificationClickHandler(notificationData);\n    } else {\n      var message = notificationData === null || notificationData === void 0 ? void 0 : notificationData.message;\n      if (message !== null && message !== void 0 && message.url) {\n        var actionUrlTarget = getURLTarget(message === null || message === void 0 ? void 0 : message.open_in_new_tab);\n        window.open(formatActionLink(message.url), actionUrlTarget);\n      }\n    }\n  };\n  var markNotificationClicked = function markNotificationClicked() {\n    inbox.feed.markClicked(notificationData.n_id);\n  };\n  var handleCardClick = function handleCardClick(e) {\n    var _notificationData$mes;\n    e.stopPropagation();\n    var clicked = notificationData.interacted_on;\n    var actionUrlTarget = getURLTarget(notificationData === null || notificationData === void 0 ? void 0 : (_notificationData$mes = notificationData.message) === null || _notificationData$mes === void 0 ? void 0 : _notificationData$mes.open_in_new_tab);\n    markNotificationClicked();\n    if (!clicked && actionUrlTarget === '_self') {\n      setTimeout(function () {\n        cardClickNavigation();\n      }, 1000);\n    } else {\n      cardClickNavigation();\n    }\n  };\n  var handleActionClick = function handleActionClick(e, clickData) {\n    e.stopPropagation();\n    var clicked = notificationData.interacted_on;\n    var actionUrlTarget = getURLTarget(clickData === null || clickData === void 0 ? void 0 : clickData.target);\n    markNotificationClicked();\n    if (!clicked && actionUrlTarget === '_self') {\n      setTimeout(function () {\n        if (clickData !== null && clickData !== void 0 && clickData.url) {\n          window.open(formatActionLink(clickData.url), actionUrlTarget);\n        } else {\n          cardClickNavigation();\n        }\n      }, 1000);\n    } else {\n      if (clickData !== null && clickData !== void 0 && clickData.url) {\n        window.open(formatActionLink(clickData.url), actionUrlTarget);\n      } else {\n        cardClickNavigation();\n      }\n    }\n  };\n  return /*#__PURE__*/React__default.createElement(\"div\", {\n    onClick: handleCardClick\n  }, /*#__PURE__*/React__default.createElement(Notification, {\n    notificationData: notificationData,\n    handleActionClick: handleActionClick\n  }));\n}\n\nvar EmptyNotificationIcon = function EmptyNotificationIcon(props) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 185,\n    height: 114,\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, props), /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 92.32,\n    cy: 56.616,\n    rx: 60.32,\n    ry: 56.616,\n    fill: \"#9F9F9F\",\n    fillOpacity: 0.11\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 69.174,\n    y: 17.469,\n    width: 115.826,\n    height: 40.217,\n    rx: 12.87,\n    fill: \"#9F9F9F\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 123.065,\n    y: 29.533,\n    width: 33.783,\n    height: 5.63,\n    rx: 2.815,\n    fill: \"#D9D9D9\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 95.717,\n    y: 39.185,\n    width: 59.522,\n    height: 5.63,\n    rx: 2.815,\n    fill: \"#D9D9D9\"\n  }), /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 170.924,\n    cy: 37.577,\n    rx: 8.446,\n    ry: 8.043,\n    fill: \"#D9D9D9\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    y: 51.25,\n    width: 120.652,\n    height: 40.217,\n    rx: 12.87,\n    fill: \"#D9E9FF\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 30.565,\n    y: 63.315,\n    width: 33.783,\n    height: 5.63,\n    rx: 2.815,\n    fill: \"#93AFD6\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    x: 30.565,\n    y: 72.967,\n    width: 59.522,\n    height: 5.63,\n    rx: 2.815,\n    fill: \"#93AFD6\"\n  }), /*#__PURE__*/React.createElement(\"ellipse\", {\n    cx: 17.294,\n    cy: 71.358,\n    rx: 8.446,\n    ry: 8.043,\n    fill: \"#93AFD6\"\n  }));\n};\n\nvar _templateObject$3, _templateObject2$2, _templateObject3$2, _templateObject4$1, _templateObject5$1, _templateObject6$1, _templateObject7$1, _templateObject8$1;\nfunction Loader(_ref) {\n  var style = _ref.style,\n    size = _ref.size;\n  var color = style === null || style === void 0 ? void 0 : style.color;\n  return /*#__PURE__*/React__default.createElement(SpinnerContainer, null, /*#__PURE__*/React__default.createElement(Spinner, {\n    style: style,\n    color: color,\n    size: size\n  }));\n}\nfunction NotificationsList() {\n  var _storeData$activeStor;\n  var _useInbox = useInbox(),\n    _useInbox$notificatio = _useInbox.notificationsData,\n    storeData = _useInbox$notificatio.storeData,\n    hasNext = _useInbox$notificatio.hasNext,\n    initialLoading = _useInbox$notificatio.initialLoading,\n    activeStoreId = _useInbox$notificatio.activeStoreId,\n    noNotificationsComponent = _useInbox.noNotificationsComponent,\n    loaderComponent = _useInbox.loaderComponent,\n    pagination = _useInbox.pagination,\n    changingActiveStore = _useInbox.changingActiveStore,\n    inbox = _useInbox.inbox;\n  var _useTheme = useTheme(),\n    notificationsContainer = _useTheme.notificationsContainer;\n  var notifications = (storeData === null || storeData === void 0 ? void 0 : (_storeData$activeStor = storeData[activeStoreId]) === null || _storeData$activeStor === void 0 ? void 0 : _storeData$activeStor.notifications) || [];\n  if (initialLoading) {\n    return /*#__PURE__*/React__default.createElement(InitialLoader, null, /*#__PURE__*/React__default.createElement(Loader, {\n      style: notificationsContainer === null || notificationsContainer === void 0 ? void 0 : notificationsContainer.loader,\n      size: \"large\"\n    }));\n  }\n  if (notifications.length <= 0) {\n    if (noNotificationsComponent) {\n      var NoNotificationsComponent = noNotificationsComponent;\n      return /*#__PURE__*/React__default.createElement(NoNotificationsComponent, null);\n    }\n    return /*#__PURE__*/React__default.createElement(EmptyNotificationsContainer, null, /*#__PURE__*/React__default.createElement(EmptyNotificationIcon, null), /*#__PURE__*/React__default.createElement(EmptyText, {\n      style: notificationsContainer === null || notificationsContainer === void 0 ? void 0 : notificationsContainer.noNotificationsText\n    }, \"No notifications yet\"), /*#__PURE__*/React__default.createElement(EmptySubText, {\n      style: notificationsContainer === null || notificationsContainer === void 0 ? void 0 : notificationsContainer.noNotificationsSubtext\n    }, \"We'll let you know when we've got something new for you.\"));\n  }\n  if (changingActiveStore) {\n    return null;\n  }\n  return /*#__PURE__*/React__default.createElement(ScrollDiv, null, /*#__PURE__*/React__default.createElement(InfiniteScroll, {\n    scrollableTarget: \"ss-notification-container\",\n    dataLength: notifications.length,\n    next: function next() {\n      inbox.feed.fetchNotifications();\n    },\n    hasMore: pagination && hasNext,\n    loader: (loaderComponent === null || loaderComponent === void 0 ? void 0 : loaderComponent()) || /*#__PURE__*/React__default.createElement(Loader, {\n      style: notificationsContainer === null || notificationsContainer === void 0 ? void 0 : notificationsContainer.loader\n    })\n  }, notifications.map(function (notification) {\n    return /*#__PURE__*/React__default.createElement(ClickableNotification, {\n      notificationData: notification,\n      key: notification.n_id\n    });\n  })));\n}\nvar ScrollDiv = styled.div(_templateObject$3 || (_templateObject$3 = _taggedTemplateLiteralLoose([\"\"])));\nvar EmptyNotificationsContainer = styled.div(_templateObject2$2 || (_templateObject2$2 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  flex-direction: column;\\n  margin: 32px;\\n  margin-top: 40px;\\n\"])));\nvar EmptyText = styled(HeadingText)(_templateObject3$2 || (_templateObject3$2 = _taggedTemplateLiteralLoose([\"\\n  font-weight: 600;\\n  text-align: center;\\n  background-color: transparent;\\n  margin: 20px 0px;\\n  margin-bottom: 16px;\\n  color: \", \";\\n\"])), lightColors.primaryText);\nvar EmptySubText = styled(CText)(_templateObject4$1 || (_templateObject4$1 = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n  text-align: center;\\n\"])), lightColors.secondaryText);\nvar spin = react.keyframes(_templateObject5$1 || (_templateObject5$1 = _taggedTemplateLiteralLoose([\"\\n0% {\\n  transform: rotate(0deg);\\n}\\n100% {\\n  transform: rotate(360deg);\\n}\\n\"])));\nvar Spinner = styled.div(_templateObject6$1 || (_templateObject6$1 = _taggedTemplateLiteralLoose([\"\\n  border: \", \";\\n  border-top: \", \";\\n  border-top-color: \", \";\\n  border-radius: 50%;\\n  width: \", \";\\n  height: \", \";\\n  animation: \", \" 1s linear infinite;\\n  margin: 5px;\\n\"])), function (props) {\n  return props.size === 'large' ? \"5px solid \" + lightColors.border : \"3px solid \" + lightColors.border;\n}, function (props) {\n  return props.size === 'large' ? '5px solid' : '3px solid';\n}, function (props) {\n  return props.color ? props.color : lightColors.primary;\n}, function (props) {\n  return props.size === 'large' ? '20px' : '10px';\n}, function (props) {\n  return props.size === 'large' ? '20px' : '10px';\n}, spin);\nvar SpinnerContainer = styled.div(_templateObject7$1 || (_templateObject7$1 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n\"])));\nvar InitialLoader = styled.div(_templateObject8$1 || (_templateObject8$1 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 32px;\\n\"])));\n\nvar _templateObject$4, _templateObject2$3, _templateObject3$3, _templateObject4$2, _templateObject5$2, _templateObject6$2, _templateObject7$2, _templateObject8$2, _templateObject9$1;\nfunction hasNotifications(storeData) {\n  var hasData = false;\n  for (var storeId in storeData) {\n    var _store$notifications;\n    var store = storeData[storeId];\n    if ((store === null || store === void 0 ? void 0 : (_store$notifications = store.notifications) === null || _store$notifications === void 0 ? void 0 : _store$notifications.length) > 0) {\n      hasData = true;\n    }\n  }\n  return hasData;\n}\nfunction Header() {\n  var _useTheme = useTheme(),\n    header = _useTheme.header,\n    tabs = _useTheme.tabs;\n  var _useInbox = useInbox(),\n    inbox = _useInbox.inbox,\n    notificationsData = _useInbox.notificationsData,\n    activeStore = _useInbox.activeStore,\n    setActiveStore = _useInbox.setActiveStore,\n    setChangingActiveStore = _useInbox.setChangingActiveStore,\n    showUnreadCountOnTabs = _useInbox.showUnreadCountOnTabs,\n    tabBadgeComponent = _useInbox.tabBadgeComponent;\n  var isEmpty = !hasNotifications(notificationsData === null || notificationsData === void 0 ? void 0 : notificationsData.storeData);\n  var stores = inbox.feed.stores;\n  var hasStores = (stores === null || stores === void 0 ? void 0 : stores.length) > 0;\n  var TabBadgeComponent = tabBadgeComponent;\n  return /*#__PURE__*/React__default.createElement(Container$1, {\n    style: header === null || header === void 0 ? void 0 : header.container\n  }, /*#__PURE__*/React__default.createElement(TopContainer, {\n    hasStores: hasStores\n  }, /*#__PURE__*/React__default.createElement(HeaderText$1, {\n    style: header === null || header === void 0 ? void 0 : header.headerText\n  }, \"Notifications\"), !isEmpty && /*#__PURE__*/React__default.createElement(AllReadButton, {\n    style: header === null || header === void 0 ? void 0 : header.markAllReadText,\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      inbox.feed.markAllRead();\n    }\n  }, \"Mark all as read\")), stores && stores.length > 0 && /*#__PURE__*/React__default.createElement(TabsContainer, null, stores.map(function (store, index) {\n    var _notificationsData$st, _notificationsData$st2;\n    var isActiveTab = activeStore === store.storeId;\n    var tabUnseenCount = (notificationsData === null || notificationsData === void 0 ? void 0 : (_notificationsData$st = notificationsData.storeData) === null || _notificationsData$st === void 0 ? void 0 : (_notificationsData$st2 = _notificationsData$st[store.storeId]) === null || _notificationsData$st2 === void 0 ? void 0 : _notificationsData$st2.unseenCount) || 0;\n    var showBadge = showUnreadCountOnTabs && tabUnseenCount > 0;\n    var selectedTabBottomColor = isActiveTab ? tabs === null || tabs === void 0 ? void 0 : tabs.bottomColor : 'none';\n    var textColor = isActiveTab ? tabs === null || tabs === void 0 ? void 0 : tabs.color : (tabs === null || tabs === void 0 ? void 0 : tabs.unselectedColor) || (tabs === null || tabs === void 0 ? void 0 : tabs.color);\n    return /*#__PURE__*/React__default.createElement(TabContainer, {\n      style: {\n        borderBottomColor: selectedTabBottomColor\n      },\n      key: index,\n      selected: isActiveTab,\n      onClick: function onClick() {\n        setChangingActiveStore(true);\n        setActiveStore(store.storeId);\n        inbox.changeActiveStore(store.storeId);\n        setTimeout(function () {\n          setChangingActiveStore(false);\n        }, 0);\n      }\n    }, /*#__PURE__*/React__default.createElement(TabText, {\n      selected: isActiveTab,\n      style: _extends({}, tabs, {\n        color: textColor\n      })\n    }, store.label), showBadge && (TabBadgeComponent ? /*#__PURE__*/React__default.createElement(TabBadgeComponent, {\n      count: tabUnseenCount\n    }) : /*#__PURE__*/React__default.createElement(TabBadge, {\n      style: {\n        backgroundColor: tabs === null || tabs === void 0 ? void 0 : tabs.badgeColor,\n        color: tabs === null || tabs === void 0 ? void 0 : tabs.badgeText\n      }\n    }, /*#__PURE__*/React__default.createElement(TabBadgeText, {\n      count: tabUnseenCount\n    }, tabUnseenCount))));\n  })));\n}\nvar Container$1 = styled.div(_templateObject$4 || (_templateObject$4 = _taggedTemplateLiteralLoose([\"\\n  position: sticky;\\n  top: 0;\\n  padding: 16px;\\n  padding-bottom: 0px;\\n  z-index: 1000;\\n  background-color: \", \";\\n  box-shadow: 0 0 3px 0 rgba(0, 0, 0, 0.1);\\n\"])), lightColors.main);\nvar TopContainer = styled.div(_templateObject2$3 || (_templateObject2$3 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  margin-bottom: \", \";\\n  padding-bottom: \", \";\\n\"])), function (props) {\n  return props.hasStores ? '16px' : '0px';\n}, function (props) {\n  return props.hasStores ? '0px' : '16px';\n});\nvar TabsContainer = styled.div(_templateObject3$3 || (_templateObject3$3 = _taggedTemplateLiteralLoose([\"\\n  display: flex;\\n  overflow-x: scroll;\\n  -ms-overflow-style: none;\\n  scrollbar-width: none;\\n  &::-webkit-scrollbar {\\n    display: none;\\n  }\\n\"])));\nvar TabContainer = styled.div(_templateObject4$2 || (_templateObject4$2 = _taggedTemplateLiteralLoose([\"\\n  padding: 5px 15px 3px 15px;\\n  border-bottom: \", \";\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  gap: 5px;\\n\"])), function (props) {\n  return props.selected ? \"2px solid \" + lightColors.primary : 'none';\n});\nvar TabText = styled(CText)(_templateObject5$2 || (_templateObject5$2 = _taggedTemplateLiteralLoose([\"\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: \", \";\\n\"])), function (props) {\n  return props.selected ? lightColors.primaryText : lightColors.secondaryText + 'D9';\n});\nvar HeaderText$1 = styled(HeadingText)(_templateObject6$2 || (_templateObject6$2 = _taggedTemplateLiteralLoose([\"\\n  font-weight: 600;\\n  font-size: 16px;\\n\"])));\nvar AllReadButton = styled(HeadingText)(_templateObject7$2 || (_templateObject7$2 = _taggedTemplateLiteralLoose([\"\\n  color: \", \";\\n  font-size: 12px;\\n  cursor: pointer;\\n\"])), lightColors.primary);\nvar TabBadge = styled.div(_templateObject8$2 || (_templateObject8$2 = _taggedTemplateLiteralLoose([\"\\n  height: 18px;\\n  width: 20px;\\n  border-radius: 50%;\\n  background-color: rgba(100, 116, 139, 0.09);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  color: \", \";\\n\"])), lightColors.primaryText);\nvar TabBadgeText = styled.p(_templateObject9$1 || (_templateObject9$1 = _taggedTemplateLiteralLoose([\"\\n  margin: 0px;\\n  padding: 0px;\\n  font-size: \", \";\\n  font-weight: 600;\\n  line-height: 1;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,\\n    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\\n\"])), function (props) {\n  return (props === null || props === void 0 ? void 0 : props.count) > 99 ? '8px' : '10px';\n});\n\nvar _templateObject$5;\nfunction NotificationsContainer() {\n  var _useTheme = useTheme(),\n    notificationsContainer = _useTheme.notificationsContainer;\n  return /*#__PURE__*/React__default.createElement(Container$2, {\n    style: notificationsContainer === null || notificationsContainer === void 0 ? void 0 : notificationsContainer.container,\n    id: \"ss-notification-container\"\n  }, /*#__PURE__*/React__default.createElement(Header, null), /*#__PURE__*/React__default.createElement(NotificationsList, null));\n}\nvar Container$2 = styled.div(_templateObject$5 || (_templateObject$5 = _taggedTemplateLiteralLoose([\"\\n  height: 500px;\\n  width: 450px;\\n  margin: 0px 15px;\\n  border-radius: 5px;\\n  background-color: \", \";\\n  border: 1px solid \", \";\\n  display: inline-block;\\n  overflow: scroll;\\n  box-shadow: 0 0px 7px 0 rgba(0, 0, 0, 0.1);\\n  @media (max-width: 425px) {\\n    width: 99.5vw;\\n    margin: 0px;\\n    border-radius: 0px;\\n  }\\n\"])), lightColors.main, lightColors.border);\n\nvar useClickOutside = function useClickOutside(ref, handler) {\n  React.useEffect(function () {\n    var startedInside = false;\n    var startedWhenMounted = false;\n    var listener = function listener(event) {\n      if (startedInside || !startedWhenMounted) return;\n      if (!ref.current || ref.current.contains(event.target)) return;\n      handler(event);\n    };\n    var validateEventStart = function validateEventStart(event) {\n      startedWhenMounted = ref.current;\n      startedInside = ref.current && ref.current.contains(event.target);\n    };\n    document.addEventListener('mousedown', validateEventStart);\n    document.addEventListener('touchstart', validateEventStart);\n    document.addEventListener('click', listener);\n    return function () {\n      document.removeEventListener('mousedown', validateEventStart);\n      document.removeEventListener('touchstart', validateEventStart);\n      document.removeEventListener('click', listener);\n    };\n  }, [ref, handler]);\n};\n\nvar _templateObject$6, _templateObject2$4;\nfunction Inbox(_ref) {\n  var openInbox = _ref.openInbox,\n    toggleInbox = _ref.toggleInbox,\n    popperPosition = _ref.popperPosition;\n  var _useState = React.useState(null),\n    referenceElement = _useState[0],\n    setReferenceElement = _useState[1];\n  var _useState2 = React.useState(null),\n    popperElement = _useState2[0],\n    setPopperElement = _useState2[1];\n  var _useInbox = useInbox(),\n    setNotificationsData = _useInbox.setNotificationsData;\n  useClickOutside({\n    current: popperElement\n  }, function () {\n    toggleInbox(function (prev) {\n      return !prev;\n    });\n  });\n  var _usePopper = reactPopper.usePopper(referenceElement, popperElement, {\n      placement: popperPosition,\n      modifiers: [{\n        name: 'offset',\n        options: {\n          offset: [0, 5]\n        }\n      }]\n    }),\n    styles = _usePopper.styles,\n    attributes = _usePopper.attributes;\n  var handleBellClick = function handleBellClick() {\n    setNotificationsData(function (prev) {\n      return _extends({}, prev, {\n        count: 0\n      });\n    });\n    toggleInbox(function (prev) {\n      return !prev;\n    });\n  };\n  return /*#__PURE__*/React__default.createElement(Container$3, null, /*#__PURE__*/React__default.createElement(BellContainer, {\n    onClick: handleBellClick,\n    ref: setReferenceElement\n  }, /*#__PURE__*/React__default.createElement(Badge, null), /*#__PURE__*/React__default.createElement(Bell, null)), openInbox && /*#__PURE__*/React__default.createElement(\"div\", _extends({\n    ref: setPopperElement,\n    style: _extends({}, styles.popper, {\n      zIndex: 999\n    })\n  }, attributes.popper), /*#__PURE__*/React__default.createElement(NotificationsContainer, null)));\n}\nvar Container$3 = styled.div(_templateObject$6 || (_templateObject$6 = _taggedTemplateLiteralLoose([\"\\n  position: relative;\\n  display: inline-block;\\n  background-color: transparent;\\n  line-height: 1;\\n\"])));\nvar BellContainer = styled.div(_templateObject2$4 || (_templateObject2$4 = _taggedTemplateLiteralLoose([\"\\n  position: relative;\\n  margin-top: 12px;\\n  margin-right: 12px;\\n  cursor: pointer;\\n\"])));\n\nvar _templateObject$7, _templateObject2$5, _templateObject3$4, _templateObject4$3, _templateObject5$3;\nfunction ToastNotification(_ref) {\n  var _toast$bodyText, _toast$bodyText2, _message$avatar2, _message$text, _message$text$replace, _message$text$replace2;\n  var notificationData = _ref.notificationData,\n    closeToast = _ref.closeToast;\n  var _useTheme = useTheme(),\n    toast = _useTheme.toast;\n  var _useInbox = useInbox(),\n    toggleInbox = _useInbox.toggleInbox,\n    themeType = _useInbox.themeType;\n  var message = notificationData.message;\n  var _useState = React.useState(false),\n    validAvatar = _useState[0],\n    setValidAvatar = _useState[1];\n  React.useEffect(function () {\n    var _message$avatar;\n    var isValidAvatar = isImgUrl(message === null || message === void 0 ? void 0 : (_message$avatar = message.avatar) === null || _message$avatar === void 0 ? void 0 : _message$avatar.avatar_url);\n    isValidAvatar.then(function (res) {\n      return setValidAvatar(res);\n    });\n  }, [notificationData]);\n  var blockquoteColor = (toast === null || toast === void 0 ? void 0 : (_toast$bodyText = toast.bodyText) === null || _toast$bodyText === void 0 ? void 0 : _toast$bodyText.blockquoteColor) || lightColors.border;\n  var linkColor = (toast === null || toast === void 0 ? void 0 : (_toast$bodyText2 = toast.bodyText) === null || _toast$bodyText2 === void 0 ? void 0 : _toast$bodyText2.linkColor) || lightColors.primary;\n  return /*#__PURE__*/React__default.createElement(Container$4, {\n    style: toast === null || toast === void 0 ? void 0 : toast.container,\n    onClick: function onClick(e) {\n      toggleInbox(true);\n      closeToast();\n    }\n  }, /*#__PURE__*/React__default.createElement(AvatarView$1, null, message !== null && message !== void 0 && (_message$avatar2 = message.avatar) !== null && _message$avatar2 !== void 0 && _message$avatar2.avatar_url && validAvatar ? /*#__PURE__*/React__default.createElement(AvatarImage$1, {\n    src: message.avatar.avatar_url,\n    alt: \"avatar\"\n  }) : /*#__PURE__*/React__default.createElement(AvatarIcon, {\n    type: themeType\n  })), /*#__PURE__*/React__default.createElement(\"div\", null, /*#__PURE__*/React__default.createElement(HeaderText$2, {\n    style: toast === null || toast === void 0 ? void 0 : toast.headerText\n  }, message.header), /*#__PURE__*/React__default.createElement(BodyText$1, {\n    style: toast === null || toast === void 0 ? void 0 : toast.bodyText\n  }, /*#__PURE__*/React__default.createElement(Markdown, {\n    components: {\n      a: function a(_ref2) {\n        var children = _ref2.children,\n          href = _ref2.href;\n        return /*#__PURE__*/React__default.createElement(\"a\", {\n          href: href,\n          style: {\n            color: linkColor,\n            textDecoration: 'none'\n          }\n        }, children);\n      },\n      p: function p(_ref3) {\n        var children = _ref3.children;\n        return /*#__PURE__*/React__default.createElement(\"p\", {\n          style: {\n            margin: 0,\n            overflowWrap: 'anywhere'\n          }\n        }, children);\n      },\n      blockquote: function blockquote(_ref4) {\n        var children = _ref4.children;\n        return /*#__PURE__*/React__default.createElement(\"blockquote\", {\n          style: {\n            margin: 0,\n            paddingLeft: 10,\n            borderLeft: \"3px \" + blockquoteColor + \" solid\",\n            marginBottom: 5,\n            marginTop: 5\n          }\n        }, children);\n      },\n      ul: function ul(_ref5) {\n        var children = _ref5.children;\n        return /*#__PURE__*/React__default.createElement(\"ul\", {\n          style: {\n            whiteSpace: 'normal',\n            margin: 0,\n            paddingLeft: 10\n          }\n        }, children);\n      },\n      ol: function ol(_ref6) {\n        var children = _ref6.children;\n        return /*#__PURE__*/React__default.createElement(\"ol\", {\n          style: {\n            whiteSpace: 'normal',\n            margin: 0,\n            paddingLeft: 10\n          }\n        }, children);\n      },\n      img: function img(props) {\n        return /*#__PURE__*/React__default.createElement(\"img\", _extends({\n          style: {\n            maxWidth: '100%',\n            objectFit: 'contain'\n          }\n        }, props));\n      }\n    }\n  }, message === null || message === void 0 ? void 0 : (_message$text = message.text) === null || _message$text === void 0 ? void 0 : (_message$text$replace = _message$text.replaceAll('\\\\\\n', '&nbsp;')) === null || _message$text$replace === void 0 ? void 0 : (_message$text$replace2 = _message$text$replace.replaceAll('\\n', '  \\n')) === null || _message$text$replace2 === void 0 ? void 0 : _message$text$replace2.replaceAll('&nbsp;', '&nbsp;  \\n')))));\n}\nvar Container$4 = styled.div(_templateObject$7 || (_templateObject$7 = _taggedTemplateLiteralLoose([\"\\n  background-color: \", \";\\n  cursor: pointer;\\n  padding: 14px;\\n  display: flex;\\n  overflow-wrap: anywhere;\\n\"])), lightColors.main);\nvar HeaderText$2 = styled(CText)(_templateObject2$5 || (_templateObject2$5 = _taggedTemplateLiteralLoose([\"\\n  font-size: 13px;\\n  line-height: 16px;\\n  font-weight: 700;\\n  margin: 10px 0px;\\n\"])));\nvar BodyText$1 = styled.div(_templateObject3$4 || (_templateObject3$4 = _taggedTemplateLiteralLoose([\"\\n  font-size: 12px;\\n  line-height: 18px;\\n  font-weight: 400;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica,\\n    Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';\\n  color: \", \";\\n  margin: 10px 0px;\\n  color: \", \";\\n\"])), lightColors.primaryText, lightColors.primaryText);\nvar AvatarImage$1 = styled.img(_templateObject4$3 || (_templateObject4$3 = _taggedTemplateLiteralLoose([\"\\n  height: 36px;\\n  width: 36px;\\n  border-radius: 100px;\\n\"])));\nvar AvatarView$1 = styled.div(_templateObject5$3 || (_templateObject5$3 = _taggedTemplateLiteralLoose([\"\\n  margin-top: 8px;\\n  margin-right: 12px;\\n\"])));\n\nvar _templateObject$8;\nfunction Toast(_ref) {\n  var position = _ref.position,\n    duration = _ref.duration,\n    limit = _ref.limit;\n  var toastDuration = duration || 3000;\n  var toastsLimit = limit || 3;\n  var toastPosition = !position ? window.innerWidth > 425 ? 'bottom-right' : 'bottom-center' : position;\n  return /*#__PURE__*/React__default.createElement(StyledContainer, {\n    autoClose: toastDuration,\n    position: toastPosition,\n    limit: toastsLimit,\n    hideProgressBar: true,\n    pauseOnHover: false,\n    closeButton: false,\n    pauseOnFocusLoss: false\n  });\n}\nfunction notify(_ref2) {\n  var notificationsData = _ref2.notificationsData,\n    toastProps = _ref2.toastProps;\n  var ToastNotificationComponent = (toastProps === null || toastProps === void 0 ? void 0 : toastProps.toastComponent) || ToastNotification;\n  if (document.hidden) return;\n  var toastId = reactToastify.toast( /*#__PURE__*/React__default.createElement(ToastNotificationComponent, {\n    notificationData: notificationsData,\n    closeToast: function closeToast() {\n      reactToastify.toast.dismiss({\n        id: toastId\n      });\n    }\n  }));\n}\nvar StyledContainer = styled(reactToastify.ToastContainer)(_templateObject$8 || (_templateObject$8 = _taggedTemplateLiteralLoose([\"\\n  &.Toastify__toast-container {\\n    max-width: 450px;\\n    min-width: 300px;\\n    padding: 0px;\\n    width: unset;\\n  }\\n\\n  .Toastify__toast-theme--light,\\n  .Toastify__toast-theme--default,\\n  .Toastify__toast-theme--dark {\\n    padding: 0px;\\n    border-radius: 5px;\\n    background-color: transparent;\\n  }\\n\\n  .Toastify__toast-body {\\n    padding: 0px;\\n  }\\n\"])));\n\nvar initialNotificationData = {\n  storeData: {},\n  unseenCount: 0,\n  hasNext: false,\n  initialLoading: false,\n  fetchMoreLoading: false\n};\nvar InboxContext$1 = React.createContext({\n  notificationsData: initialNotificationData\n});\nfunction SuprSendProvider(_ref) {\n  var children = _ref.children,\n    workspaceKey = _ref.workspaceKey,\n    distinctId = _ref.distinctId,\n    subscriberId = _ref.subscriberId,\n    inboxId = _ref.inboxId,\n    tenantId = _ref.tenantId,\n    stores = _ref.stores,\n    pageSize = _ref.pageSize;\n  if (inboxId) {\n    subscriberId = inboxId;\n  }\n  var _useState = React.useState(),\n    inbox = _useState[0],\n    setInbox = _useState[1];\n  var _useState2 = React.useState(_extends({}, initialNotificationData)),\n    notificationsData = _useState2[0],\n    setNotificationsData = _useState2[1];\n  React.useEffect(function () {\n    var inboxInst = new SuprsendJSInbox(workspaceKey, {\n      pageSize: pageSize,\n      tenantID: tenantId,\n      stores: stores\n    });\n    setInbox(inboxInst);\n    inboxInst.emitter.on('sync_notif_store', function () {\n      var inboxData = inboxInst.feed.data;\n      setNotificationsData({\n        storeData: (inboxData === null || inboxData === void 0 ? void 0 : inboxData.stores) || {},\n        count: (inboxData === null || inboxData === void 0 ? void 0 : inboxData.unseenCount) || 0,\n        hasNext: inboxData === null || inboxData === void 0 ? void 0 : inboxData.hasNext,\n        initialLoading: inboxData === null || inboxData === void 0 ? void 0 : inboxData.initialLoading,\n        fetchMoreLoading: inboxData === null || inboxData === void 0 ? void 0 : inboxData.fetchMoreLoading,\n        activeStoreId: inboxData === null || inboxData === void 0 ? void 0 : inboxData.activeStoreId\n      });\n    });\n    return function () {\n      inboxInst.emitter.all.clear();\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!subscriberId || !inbox) return;\n    inbox.identifyUser(distinctId, subscriberId);\n    inbox.feed.fetchNotifications();\n    return function () {\n      inbox.resetUser();\n    };\n  }, [subscriberId, inbox]);\n  return /*#__PURE__*/React__default.createElement(InboxContext$1.Provider, {\n    value: {\n      inbox: inbox,\n      notificationsData: notificationsData,\n      subscriberId: subscriberId\n    }\n  }, children);\n}\n\nfunction useNotifications(storeId) {\n  var _inboxData$inbox, _notificationsFeed$st, _notificationsFeed$st2, _inboxData$notificati, _inboxData$notificati2;\n  var inboxData = React.useContext(InboxContext$1);\n  var notificationsFeed = (_inboxData$inbox = inboxData.inbox) === null || _inboxData$inbox === void 0 ? void 0 : _inboxData$inbox.feed;\n  React.useEffect(function () {\n    if (inboxData !== null && inboxData !== void 0 && inboxData.inbox && storeId) {\n      inboxData.inbox.changeActiveStore(storeId);\n    }\n  }, [storeId, inboxData === null || inboxData === void 0 ? void 0 : inboxData.inbox, inboxData === null || inboxData === void 0 ? void 0 : inboxData.subscriberId]);\n  var firstStore = (notificationsFeed === null || notificationsFeed === void 0 ? void 0 : (_notificationsFeed$st = notificationsFeed.stores) === null || _notificationsFeed$st === void 0 ? void 0 : (_notificationsFeed$st2 = _notificationsFeed$st[0]) === null || _notificationsFeed$st2 === void 0 ? void 0 : _notificationsFeed$st2.storeId) || 'default_store';\n  var activeStoreId = storeId || firstStore;\n  var activeStoreData = inboxData === null || inboxData === void 0 ? void 0 : (_inboxData$notificati = inboxData.notificationsData) === null || _inboxData$notificati === void 0 ? void 0 : (_inboxData$notificati2 = _inboxData$notificati.storeData) === null || _inboxData$notificati2 === void 0 ? void 0 : _inboxData$notificati2[activeStoreId];\n  return {\n    notifications: (activeStoreData === null || activeStoreData === void 0 ? void 0 : activeStoreData.notifications) || [],\n    initialLoading: inboxData.notificationsData.initialLoading,\n    hasNext: inboxData.notificationsData.hasNext,\n    fetchMoreLoading: inboxData.notificationsData.fetchMoreLoading,\n    markClicked: notificationsFeed === null || notificationsFeed === void 0 ? void 0 : notificationsFeed.markClicked.bind(notificationsFeed),\n    markRead: notificationsFeed === null || notificationsFeed === void 0 ? void 0 : notificationsFeed.markRead.bind(notificationsFeed),\n    markUnRead: notificationsFeed === null || notificationsFeed === void 0 ? void 0 : notificationsFeed.markUnRead.bind(notificationsFeed),\n    markArchived: notificationsFeed === null || notificationsFeed === void 0 ? void 0 : notificationsFeed.markArchived.bind(notificationsFeed),\n    markAllSeen: notificationsFeed === null || notificationsFeed === void 0 ? void 0 : notificationsFeed.markAllSeen.bind(notificationsFeed),\n    markAllRead: notificationsFeed === null || notificationsFeed === void 0 ? void 0 : notificationsFeed.markAllRead.bind(notificationsFeed),\n    fetchPrevious: notificationsFeed === null || notificationsFeed === void 0 ? void 0 : notificationsFeed.fetchNotifications.bind(notificationsFeed)\n  };\n}\n\nfunction useBell() {\n  var _inboxData$inbox, _inboxData$inbox$feed, _inboxData$inbox2;\n  var inboxData = React.useContext(InboxContext$1);\n  return {\n    unSeenCount: inboxData.notificationsData.count,\n    markAllSeen: (_inboxData$inbox = inboxData.inbox) === null || _inboxData$inbox === void 0 ? void 0 : (_inboxData$inbox$feed = _inboxData$inbox.feed.markAllSeen) === null || _inboxData$inbox$feed === void 0 ? void 0 : _inboxData$inbox$feed.bind((_inboxData$inbox2 = inboxData.inbox) === null || _inboxData$inbox2 === void 0 ? void 0 : _inboxData$inbox2.feed)\n  };\n}\nfunction useUnseenCount() {\n  var _inboxData$inbox3, _inboxData$inbox3$fee, _inboxData$inbox4;\n  var inboxData = React.useContext(InboxContext$1);\n  return {\n    unSeenCount: inboxData.notificationsData.count,\n    markAllSeen: (_inboxData$inbox3 = inboxData.inbox) === null || _inboxData$inbox3 === void 0 ? void 0 : (_inboxData$inbox3$fee = _inboxData$inbox3.feed.markAllSeen) === null || _inboxData$inbox3$fee === void 0 ? void 0 : _inboxData$inbox3$fee.bind((_inboxData$inbox4 = inboxData.inbox) === null || _inboxData$inbox4 === void 0 ? void 0 : _inboxData$inbox4.feed)\n  };\n}\n\nfunction useEvent(eventName, callback) {\n  var inboxData = React.useContext(InboxContext$1);\n  React.useEffect(function () {\n    var _inboxData$inbox;\n    var emitter = inboxData === null || inboxData === void 0 ? void 0 : (_inboxData$inbox = inboxData.inbox) === null || _inboxData$inbox === void 0 ? void 0 : _inboxData$inbox.emitter;\n    if (emitter) {\n      emitter.on(eventName, callback);\n    }\n    return function () {\n      return emitter === null || emitter === void 0 ? void 0 : emitter.off(eventName);\n    };\n  }, [inboxData === null || inboxData === void 0 ? void 0 : inboxData.inbox]);\n}\n\nfunction useStoreUnseenCount(storeId) {\n  var _inboxData$notificati, _inboxData$notificati2;\n  var inboxData = React.useContext(InboxContext$1);\n  return {\n    unSeenCount: (_inboxData$notificati = inboxData.notificationsData.storeData) === null || _inboxData$notificati === void 0 ? void 0 : (_inboxData$notificati2 = _inboxData$notificati[storeId]) === null || _inboxData$notificati2 === void 0 ? void 0 : _inboxData$notificati2.unseenCount\n  };\n}\nfunction useStoresUnseenCount() {\n  var inboxData = React.useContext(InboxContext$1);\n  var storeData = inboxData.notificationsData.storeData;\n  var storeCount = {};\n  for (var storeId in storeData) {\n    var store = storeData[storeId];\n    storeCount[storeId] = store.unseenCount;\n  }\n  return storeCount;\n}\n\nfunction SuprsendInbox(_ref) {\n  var _ref$workspaceKey = _ref.workspaceKey,\n    workspaceKey = _ref$workspaceKey === void 0 ? '' : _ref$workspaceKey,\n    _ref$tenantId = _ref.tenantId,\n    tenantId = _ref$tenantId === void 0 ? '' : _ref$tenantId,\n    _ref$distinctId = _ref.distinctId,\n    distinctId = _ref$distinctId === void 0 ? '' : _ref$distinctId,\n    _ref$subscriberId = _ref.subscriberId,\n    subscriberId = _ref$subscriberId === void 0 ? '' : _ref$subscriberId,\n    _ref$inboxId = _ref.inboxId,\n    inboxId = _ref$inboxId === void 0 ? '' : _ref$inboxId,\n    stores = _ref.stores,\n    toastProps = _ref.toastProps,\n    notificationClickHandler = _ref.notificationClickHandler,\n    bellComponent = _ref.bellComponent,\n    badgeComponent = _ref.badgeComponent,\n    notificationComponent = _ref.notificationComponent,\n    noNotificationsComponent = _ref.noNotificationsComponent,\n    loaderComponent = _ref.loaderComponent,\n    tabBadgeComponent = _ref.tabBadgeComponent,\n    _ref$hideAvatar = _ref.hideAvatar,\n    hideAvatar = _ref$hideAvatar === void 0 ? false : _ref$hideAvatar,\n    hideInbox = _ref.hideInbox,\n    hideToast = _ref.hideToast,\n    theme = _ref.theme,\n    _ref$themeType = _ref.themeType,\n    themeType = _ref$themeType === void 0 ? 'light' : _ref$themeType,\n    _ref$pagination = _ref.pagination,\n    pagination = _ref$pagination === void 0 ? true : _ref$pagination,\n    pageSize = _ref.pageSize,\n    _ref$popperPosition = _ref.popperPosition,\n    popperPosition = _ref$popperPosition === void 0 ? 'bottom' : _ref$popperPosition,\n    _ref$showUnreadCountO = _ref.showUnreadCountOnTabs,\n    showUnreadCountOnTabs = _ref$showUnreadCountO === void 0 ? true : _ref$showUnreadCountO;\n  if (inboxId) {\n    subscriberId = inboxId;\n  }\n  var _useState = React.useState(false),\n    openInbox = _useState[0],\n    toggleInbox = _useState[1];\n  var _useState2 = React.useState(),\n    inbox = _useState2[0],\n    setInbox = _useState2[1];\n  var _useState3 = React.useState({\n      storeData: {},\n      count: 0\n    }),\n    notificationsData = _useState3[0],\n    setNotificationsData = _useState3[1];\n  var _useState4 = React.useState(''),\n    activeStore = _useState4[0],\n    setActiveStore = _useState4[1];\n  var _useState5 = React.useState(false),\n    changingActiveStore = _useState5[0],\n    setChangingActiveStore = _useState5[1];\n  React.useEffect(function () {\n    var inboxInst = new SuprsendJSInbox(workspaceKey, {\n      pageSize: pageSize,\n      tenantID: tenantId,\n      stores: stores\n    });\n    setInbox(inboxInst);\n    inboxInst.emitter.on('sync_notif_store', function () {\n      var inboxData = inboxInst.feed.data;\n      setNotificationsData({\n        storeData: (inboxData === null || inboxData === void 0 ? void 0 : inboxData.stores) || {},\n        count: (inboxData === null || inboxData === void 0 ? void 0 : inboxData.unseenCount) || 0,\n        hasNext: inboxData === null || inboxData === void 0 ? void 0 : inboxData.hasNext,\n        initialLoading: inboxData === null || inboxData === void 0 ? void 0 : inboxData.initialLoading,\n        activeStoreId: inboxData === null || inboxData === void 0 ? void 0 : inboxData.activeStoreId\n      });\n      setActiveStore(inboxData === null || inboxData === void 0 ? void 0 : inboxData.activeStoreId);\n    });\n    inboxInst.emitter.on('new_notification', function (notification) {\n      notify({\n        notificationsData: notification,\n        toastProps: toastProps\n      });\n    });\n    return function () {\n      inboxInst.emitter.all.clear();\n    };\n  }, []);\n  React.useEffect(function () {\n    if (openInbox && subscriberId && inbox) {\n      inbox.feed.markAllSeen();\n    }\n  }, [openInbox, subscriberId, inbox]);\n  React.useEffect(function () {\n    if (!subscriberId || !inbox) return;\n    setNotificationsData({\n      storeData: {},\n      count: 0\n    });\n    inbox.identifyUser(distinctId, subscriberId);\n    inbox.feed.fetchNotifications();\n    return function () {\n      inbox.resetUser();\n    };\n  }, [subscriberId, inbox]);\n  var themeValue = themeType === 'dark' ? mergeDeep(darkTheme, theme) : theme || {};\n  return /*#__PURE__*/React__default.createElement(InboxThemeContext.Provider, {\n    value: themeValue\n  }, /*#__PURE__*/React__default.createElement(InboxContext.Provider, {\n    value: {\n      workspaceKey: workspaceKey,\n      notificationsData: notificationsData,\n      setNotificationsData: setNotificationsData,\n      notificationClickHandler: notificationClickHandler,\n      bellComponent: bellComponent,\n      badgeComponent: badgeComponent,\n      notificationComponent: notificationComponent,\n      noNotificationsComponent: noNotificationsComponent,\n      tabBadgeComponent: tabBadgeComponent,\n      toggleInbox: toggleInbox,\n      inbox: inbox,\n      loaderComponent: loaderComponent,\n      pagination: pagination,\n      hideAvatar: hideAvatar,\n      activeStore: activeStore,\n      setActiveStore: setActiveStore,\n      changingActiveStore: changingActiveStore,\n      setChangingActiveStore: setChangingActiveStore,\n      showUnreadCountOnTabs: showUnreadCountOnTabs,\n      themeType: themeType\n    }\n  }, !hideInbox && /*#__PURE__*/React__default.createElement(Inbox, {\n    openInbox: openInbox,\n    toggleInbox: toggleInbox,\n    popperPosition: popperPosition\n  }), !hideToast && /*#__PURE__*/React__default.createElement(Toast, toastProps)));\n}\n\nexports.SuprSendProvider = SuprSendProvider;\nexports[\"default\"] = SuprsendInbox;\nexports.useBell = useBell;\nexports.useEvent = useEvent;\nexports.useNotifications = useNotifications;\nexports.useStoreUnseenCount = useStoreUnseenCount;\nexports.useStoresUnseenCount = useStoresUnseenCount;\nexports.useUnseenCount = useUnseenCount;\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@suprsend/react-inbox/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@suprsend/js-inbox/dist/index.cjs":
/*!********************************************************!*\
  !*** ./node_modules/@suprsend/js-inbox/dist/index.cjs ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var socket_ioClient = __webpack_require__(/*! socket.io-client */ \"(ssr)/./node_modules/socket.io-client/build/cjs/index.js\");\nvar vanilla = __webpack_require__(/*! zustand/vanilla */ \"(ssr)/./node_modules/zustand/esm/vanilla.js\");\nvar mitt = __webpack_require__(/*! mitt */ \"(ssr)/./node_modules/mitt/dist/mitt.mjs\");\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar mitt__default = /*#__PURE__*/_interopDefaultLegacy(mitt);\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nvar SuprSendError = /*#__PURE__*/function (_Error) {\n  _inheritsLoose(SuprSendError, _Error);\n  function SuprSendError(message) {\n    var _this;\n    _this = _Error.call(this, message) || this;\n    _this.name = void 0;\n    _this.name = 'SuprSendError';\n    return _this;\n  }\n  return SuprSendError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\nfunction epochNow() {\n  return Math.round(Date.now());\n}\nfunction uuid() {\n  var dt = new Date().getTime();\n  var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (dt + Math.random() * 16) % 16 | 0;\n    dt = Math.floor(dt / 16);\n    return (c == 'x' ? r : r & 0x3 | 0x8).toString(16);\n  });\n  return uuid;\n}\n\nvar configurationStore = vanilla.createStore()(function () {\n  return {\n    apiUrl: 'https://inboxs.live',\n    collectorApiUrl: 'https://hub.suprsend.com',\n    socketUrl: 'https://betainbox.suprsend.com',\n    pageSize: 20\n  };\n});\nvar initialNotificationStore = {\n  unseenCount: 0,\n  stores: {},\n  activeStoreId: null,\n  pageNumber: 1,\n  hasNext: true,\n  initialLoading: false,\n  fetchMoreLoading: false,\n  initialFetchTime: null\n};\nvar notificationStore = vanilla.createStore()(function () {\n  return initialNotificationStore;\n});\n\nfunction _catch$1(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n  return result;\n}\nvar ApiClient = /*#__PURE__*/function () {\n  function ApiClient(config) {\n    this.socket = void 0;\n    this.config = void 0;\n    this.config = config;\n    var configStore = configurationStore.getState();\n    this.socket = socket_ioClient.io(configStore.socketUrl, {\n      transports: ['websocket'],\n      auth: {\n        subscriber_id: this.config.subscriberId,\n        distinct_id: this.config.distinctId,\n        authorization: this.config.workspaceKey + \":\" + uuid(),\n        tenant_id: this.config.tenantId\n      },\n      reconnectionAttempts: 25,\n      reconnectionDelay: 5000,\n      reconnectionDelayMax: 10000\n    });\n    this._initializeSocketEvents();\n  }\n  var _proto = ApiClient.prototype;\n  _proto.orderNotifications = function orderNotifications(newNotification, oldNotifications) {\n    // if pinned notification add new notification at start else at end of pinned notifications\n    if (newNotification.is_pinned) {\n      return [newNotification].concat(oldNotifications);\n    } else {\n      var addedNotification = false;\n      var notifications = [];\n      oldNotifications.forEach(function (notification) {\n        if (notification.is_pinned) {\n          notifications.push(notification);\n        } else {\n          if (addedNotification) {\n            notifications.push(notification);\n          } else {\n            notifications.push(newNotification);\n            notifications.push(notification);\n            addedNotification = true;\n          }\n        }\n      });\n      if (!addedNotification) {\n        return [].concat(oldNotifications, [newNotification]);\n      }\n      return notifications;\n    }\n  };\n  _proto._initializeSocketEvents = function _initializeSocketEvents() {\n    var _this = this,\n      _this2 = this,\n      _this3 = this,\n      _this4 = this;\n    this.socket.on('new_notification', function (data) {\n      try {\n        if (!data.n_id) return Promise.resolve();\n        setTimeout(function () {\n          try {\n            return Promise.resolve(_catch$1(function () {\n              return Promise.resolve(_this.getNotificationDetails(data.n_id)).then(function (response) {\n                return Promise.resolve(response.json()).then(function (resData) {\n                  var notifStore = notificationStore.getState();\n                  if (_this.config.stores) {\n                    var overallCountUpdate = false;\n                    for (var _iterator = _createForOfIteratorHelperLoose(_this.config.stores), _step; !(_step = _iterator()).done;) {\n                      var store = _step.value;\n                      var storeData = notifStore.stores[store.storeId];\n                      if (_this._notificationBelongToStore(resData.data, store)) {\n                        overallCountUpdate = true;\n                        storeData.notifications = _this.orderNotifications(resData.data, storeData.notifications);\n                        storeData.unseenCount += 1;\n                      }\n                    }\n                    if (overallCountUpdate) {\n                      notifStore.unseenCount += 1;\n                      _this.config.emitter.emit('new_notification', resData.data);\n                    }\n                    notificationStore.setState({\n                      unseenCount: notifStore.unseenCount,\n                      stores: _extends({}, notifStore.stores)\n                    });\n                  } else {\n                    if (!notifStore.activeStoreId) return;\n                    var defaultStore = notifStore.stores[notifStore.activeStoreId];\n                    notifStore.unseenCount += 1;\n                    defaultStore.unseenCount += 1;\n                    defaultStore.notifications = _this.orderNotifications(resData.data, defaultStore.notifications);\n                    notificationStore.setState({\n                      unseenCount: notifStore.unseenCount,\n                      stores: _extends({}, notifStore.stores)\n                    });\n                    _this.config.emitter.emit('new_notification', resData.data);\n                  }\n                  _this.config.emitter.emit('sync_notif_store');\n                });\n              });\n            }, function (e) {\n              console.log('SuprSend: error in new_notification event', e);\n            }));\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }, 1000);\n        return Promise.resolve();\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    });\n    this.socket.on('notification_updated', function (data) {\n      try {\n        if (!data.n_id) return Promise.resolve();\n        setTimeout(function () {\n          try {\n            return Promise.resolve(_catch$1(function () {\n              return Promise.resolve(Promise.allSettled([_this2.getNotificationDetails(data.n_id), _this2.getNotificationsCount()])).then(function (apiCalls) {\n                var _exit;\n                function _temp4(_result3) {\n                  if (_exit) return _result3;\n                  function _temp2() {\n                    _this2.config.emitter.emit('sync_notif_store');\n                  }\n                  var _temp = function () {\n                    if (apiCalls[1].status === 'fulfilled') {\n                      var countResponse = apiCalls[1].value;\n                      return Promise.resolve(countResponse.json()).then(function (countData) {\n                        notificationStore.setState(function (prevState) {\n                          for (var storeId in prevState.stores) {\n                            var store = prevState.stores[storeId];\n                            store.unseenCount = countData[storeId] || 0;\n                          }\n                          return {\n                            unseenCount: countData.ss_bell_count,\n                            stores: _extends({}, prevState.stores)\n                          };\n                        });\n                      });\n                    }\n                  }();\n                  return _temp && _temp.then ? _temp.then(_temp2) : _temp2(_temp);\n                }\n                var notifStore = notificationStore.getState();\n                var activeStoreId = notifStore.activeStoreId;\n                var _temp3 = function () {\n                  if (apiCalls[0].status === 'fulfilled') {\n                    var response = apiCalls[0].value;\n                    return Promise.resolve(response.json()).then(function (resData) {\n                      var _this2$config$stores;\n                      var newNotificationData = resData.data;\n                      if (!activeStoreId) {\n                        _exit = 1;\n                        return;\n                      }\n                      var activeStore = notifStore.stores[activeStoreId];\n                      var activeStoreQueryData = (_this2$config$stores = _this2.config.stores) == null ? void 0 : _this2$config$stores.find(function (store) {\n                        return store.storeId === activeStoreId;\n                      });\n                      if ((data == null ? void 0 : data.type) === 'archive') {\n                        var _activeStoreQueryData;\n                        if (activeStoreQueryData != null && (_activeStoreQueryData = activeStoreQueryData.query) != null && _activeStoreQueryData.archived) {\n                          if (_this2._notificationBelongToStore(newNotificationData, activeStoreQueryData)) {\n                            notifStore.stores[activeStoreId].notifications = [newNotificationData].concat(activeStore.notifications);\n                          }\n                        } else {\n                          notifStore.stores[activeStoreId].notifications = activeStore.notifications.filter(function (notification) {\n                            return notification.n_id !== data.n_id;\n                          });\n                        }\n                      } else {\n                        notifStore.stores[activeStoreId].notifications = activeStore.notifications.map(function (notification) {\n                          return notification.n_id === data.n_id ? resData.data : notification;\n                        });\n                      }\n                      notificationStore.setState({\n                        stores: _extends({}, notifStore.stores)\n                      });\n                    });\n                  }\n                }();\n                return _temp3 && _temp3.then ? _temp3.then(_temp4) : _temp4(_temp3);\n              });\n            }, function (e) {\n              console.log('SuprSend: error in notification_updated event', e);\n            }));\n          } catch (e) {\n            return Promise.reject(e);\n          }\n        }, 1000);\n        return Promise.resolve();\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    });\n    this.socket.on('update_badge', function () {\n      try {\n        notificationStore.setState({\n          unseenCount: 0\n        });\n        _this3.config.emitter.emit('sync_notif_store');\n        return Promise.resolve();\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    });\n    this.socket.on('mark_all_read', function () {\n      try {\n        var notifStore = notificationStore.getState();\n        var clickedOn = epochNow();\n        for (var storeId in notifStore.stores) {\n          var store = notifStore.stores[storeId];\n          store.notifications.forEach(function (notification) {\n            if (!notification.seen_on) {\n              notification.seen_on = clickedOn;\n            }\n          });\n          store.unseenCount = 0;\n        }\n        notificationStore.setState({\n          stores: notifStore.stores\n        });\n        _this4.config.emitter.emit('sync_notif_store');\n        return Promise.resolve();\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    });\n  };\n  _proto._notificationBelongToStore = function _notificationBelongToStore(notification, store) {\n    var _store$query, _store$query2, _store$query3, _store$query4;\n    var notifRead = !!notification.seen_on;\n    var notifArchived = notification.archived;\n    var notifTags = notification.tags;\n    var notifCategory = notification.n_category;\n    var storeRead = store == null ? void 0 : (_store$query = store.query) == null ? void 0 : _store$query.read;\n    var storeArchived = store == null ? void 0 : (_store$query2 = store.query) == null ? void 0 : _store$query2.archived;\n    var storeTags = store == null ? void 0 : (_store$query3 = store.query) == null ? void 0 : _store$query3.tags;\n    var storeCategories = store == null ? void 0 : (_store$query4 = store.query) == null ? void 0 : _store$query4.categories;\n    var sameRead = !storeRead || notifRead === storeRead;\n    var sameArchived = !storeArchived || notifArchived === storeArchived;\n    var sameTags, sameCategory;\n    if (Array.isArray(storeTags) && storeTags.length > 0) {\n      storeTags.forEach(function (tag) {\n        if (notifTags != null && notifTags.includes(tag)) {\n          sameTags = true;\n        }\n      });\n    } else {\n      sameTags = true;\n    }\n    if (Array.isArray(storeCategories) && storeCategories.length > 0) {\n      if (storeCategories.includes(notifCategory)) {\n        sameCategory = true;\n      }\n    } else {\n      sameCategory = true;\n    }\n    return sameRead && sameTags && sameCategory && sameArchived;\n  };\n  _proto._getStoreQueryString = function _getStoreQueryString(store) {\n    var query = store == null ? void 0 : store.query;\n    var tags = (query == null ? void 0 : query.tags) || [];\n    var categories = (query == null ? void 0 : query.categories) || [];\n    var read = query == null ? void 0 : query.read;\n    var archived = query == null ? void 0 : query.archived;\n    return {\n      store_id: store.storeId,\n      query: {\n        read: read,\n        archived: archived,\n        tags: {\n          or: tags\n        },\n        categories: {\n          or: categories\n        }\n      }\n    };\n  };\n  _proto._getStoresQueryString = function _getStoresQueryString() {\n    var _this5 = this;\n    var stores = this.config.stores;\n    var apiStores = stores == null ? void 0 : stores.map(function (store) {\n      return _this5._getStoreQueryString(store);\n    });\n    return apiStores;\n  };\n  _proto.getNotificationsCount = function getNotificationsCount() {\n    var _configurationStore$g = configurationStore.getState(),\n      apiUrl = _configurationStore$g.apiUrl;\n    var route = \"/notification_count/?subscriber_id=\" + this.config.subscriberId + \"&distinct_id=\" + this.config.distinctId + \"&tenant_id=\" + this.config.tenantId;\n    if (this.config.stores) {\n      var storedFilter = this._getStoresQueryString();\n      route += \"&stores=\" + encodeURIComponent(JSON.stringify(storedFilter));\n    }\n    return fetch(\"\" + apiUrl + route, {\n      method: 'GET',\n      headers: {\n        Authorization: this.config.workspaceKey + \":\" + uuid()\n      }\n    });\n  };\n  _proto.getNotifications = function getNotifications(store, page_no, page_size, before) {\n    if (page_size === void 0) {\n      page_size = 20;\n    }\n    var _configurationStore$g2 = configurationStore.getState(),\n      apiUrl = _configurationStore$g2.apiUrl;\n    var route = \"/notifications/?subscriber_id=\" + this.config.subscriberId + \"&distinct_id=\" + this.config.distinctId + \"&tenant_id=\" + this.config.tenantId + \"&page_no=\" + page_no + \"&page_size=\" + page_size + \"&before=\" + before;\n    if (store) {\n      var storedFilter = this._getStoreQueryString(store);\n      route += \"&store=\" + encodeURIComponent(JSON.stringify(storedFilter));\n    }\n    return fetch(\"\" + apiUrl + route, {\n      method: 'GET',\n      headers: {\n        Authorization: this.config.workspaceKey + \":\" + uuid()\n      }\n    });\n  };\n  _proto.getNotificationDetails = function getNotificationDetails(notification_id) {\n    var _configurationStore$g3 = configurationStore.getState(),\n      apiUrl = _configurationStore$g3.apiUrl;\n    var route = \"/notification/\" + notification_id + \"/?subscriber_id=\" + this.config.subscriberId + \"&distinct_id=\" + this.config.distinctId + \"&tenant_id=\" + this.config.tenantId;\n    return fetch(\"\" + apiUrl + route, {\n      method: 'GET',\n      headers: {\n        Authorization: this.config.workspaceKey + \":\" + uuid()\n      }\n    });\n  };\n  _proto.markBellClicked = function markBellClicked() {\n    var _configurationStore$g4 = configurationStore.getState(),\n      apiUrl = _configurationStore$g4.apiUrl;\n    var route = '/bell-clicked/';\n    var body = JSON.stringify({\n      time: epochNow(),\n      distinct_id: this.config.distinctId,\n      subscriber_id: this.config.subscriberId,\n      tenant_id: this.config.tenantId\n    });\n    return fetch(\"\" + apiUrl + route, {\n      method: 'POST',\n      body: body,\n      headers: {\n        Authorization: this.config.workspaceKey + \":\" + uuid(),\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n  _proto.markAllRead = function markAllRead() {\n    var _configurationStore$g5 = configurationStore.getState(),\n      apiUrl = _configurationStore$g5.apiUrl;\n    var route = '/mark-all-read/';\n    var body = JSON.stringify({\n      time: epochNow(),\n      distinct_id: this.config.distinctId,\n      subscriber_id: this.config.subscriberId,\n      tenant_id: this.config.tenantId\n    });\n    return fetch(\"\" + apiUrl + route, {\n      method: 'POST',\n      body: body,\n      headers: {\n        Authorization: this.config.workspaceKey + \":\" + uuid(),\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n  _proto.markNotificationClicked = function markNotificationClicked(id) {\n    var _configurationStore$g6 = configurationStore.getState(),\n      collectorApiUrl = _configurationStore$g6.collectorApiUrl;\n    var body = {\n      event: '$notification_clicked',\n      env: this.config.workspaceKey,\n      $insert_id: uuid(),\n      $time: epochNow(),\n      properties: {\n        id: id\n      }\n    };\n    return fetch(collectorApiUrl + \"/event/\", {\n      method: 'POST',\n      body: JSON.stringify(body),\n      headers: {\n        Authorization: this.config.workspaceKey + \":\",\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n  _proto.markNotificationRead = function markNotificationRead(id) {\n    var _configurationStore$g7 = configurationStore.getState(),\n      apiUrl = _configurationStore$g7.apiUrl;\n    return fetch(apiUrl + \"/notification/\" + id + \"/action\", {\n      method: 'POST',\n      body: JSON.stringify({\n        action: 'read',\n        distinct_id: this.config.distinctId,\n        subscriber_id: this.config.subscriberId\n      }),\n      headers: {\n        Authorization: this.config.workspaceKey + \":\",\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n  _proto.markNotificationUnRead = function markNotificationUnRead(id) {\n    var _configurationStore$g8 = configurationStore.getState(),\n      apiUrl = _configurationStore$g8.apiUrl;\n    return fetch(apiUrl + \"/notification/\" + id + \"/action\", {\n      method: 'POST',\n      body: JSON.stringify({\n        action: 'unread',\n        distinct_id: this.config.distinctId,\n        subscriber_id: this.config.subscriberId\n      }),\n      headers: {\n        Authorization: this.config.workspaceKey + \":\",\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n  _proto.markNotificationArchive = function markNotificationArchive(id) {\n    var _configurationStore$g9 = configurationStore.getState(),\n      apiUrl = _configurationStore$g9.apiUrl;\n    return fetch(apiUrl + \"/notification/\" + id + \"/action\", {\n      method: 'POST',\n      body: JSON.stringify({\n        action: 'archive',\n        distinct_id: this.config.distinctId,\n        subscriber_id: this.config.subscriberId\n      }),\n      headers: {\n        Authorization: this.config.workspaceKey + \":\",\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n  return ApiClient;\n}();\n\nfunction _catch(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n  return result;\n}\nvar Inbox = /*#__PURE__*/function () {\n  function Inbox(config) {\n    this.config = void 0;\n    this.config = config;\n  }\n  var _proto = Inbox.prototype;\n  _proto._overallFirstApiCall = function _overallFirstApiCall() {\n    var notifStore = notificationStore.getState();\n    for (var storeId in notifStore.stores) {\n      var store = notifStore.stores[storeId];\n      if (store.isFirstCall === false) {\n        return false;\n      }\n    }\n    return true;\n  };\n  _proto.fetchNotifications = function fetchNotifications() {\n    try {\n      var _notifStore$stores, _this$config$stores;\n      var _this = this;\n      var apiClient = _this.config.client;\n      var notifStore = notificationStore.getState();\n      var configStore = configurationStore.getState();\n      var activeStoreId = notifStore.activeStoreId;\n      if (!activeStoreId || !((_notifStore$stores = notifStore.stores) != null && _notifStore$stores[activeStoreId])) return Promise.resolve();\n      var storeData = notifStore.stores[activeStoreId];\n      var isFirstTime = storeData.isFirstCall;\n      var initialFetchTime = notifStore.initialFetchTime || Date.now();\n      var storeQuery = (_this$config$stores = _this.config.stores) == null ? void 0 : _this$config$stores.find(function (store) {\n        return store.storeId === activeStoreId;\n      });\n      return Promise.resolve(_catch(function () {\n        if (!apiClient || !notifStore.hasNext) return;\n        if (isFirstTime) {\n          notificationStore.setState({\n            initialLoading: true\n          });\n          if (_this._overallFirstApiCall()) {\n            _this.getNotificationsCount();\n          }\n        } else if (notifStore.pageNumber > 1) {\n          notificationStore.setState({\n            fetchMoreLoading: true\n          });\n        }\n        _this.config.emitter.emit('sync_notif_store');\n        return Promise.resolve(apiClient.getNotifications(storeQuery, notifStore.pageNumber, configStore.pageSize, initialFetchTime)).then(function (response) {\n          return Promise.resolve(response.json()).then(function (data) {\n            var newNotifications;\n            if (isFirstTime || !isFirstTime && notifStore.pageNumber === 1) {\n              newNotifications = data.results;\n            } else {\n              newNotifications = [].concat(storeData.notifications, data.results);\n            }\n            notifStore.stores[activeStoreId].notifications = newNotifications;\n            notifStore.stores[activeStoreId].isFirstCall = false;\n            notificationStore.setState({\n              stores: notifStore.stores,\n              pageNumber: notifStore.pageNumber + 1,\n              hasNext: data.meta.current_page < data.meta.total_pages,\n              initialFetchTime: initialFetchTime,\n              initialLoading: false,\n              fetchMoreLoading: false\n            });\n            _this.config.emitter.emit('sync_notif_store');\n            _this.config._startExipryCheck();\n          });\n        });\n      }, function (e) {\n        console.log('SUPRSEND: error getting latest notifications', e);\n        notificationStore.setState({\n          initialLoading: false,\n          fetchMoreLoading: false\n        });\n        _this.config.emitter.emit('sync_notif_store');\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.getNotificationsCount = function getNotificationsCount() {\n    try {\n      var _this2 = this;\n      var apiClient = _this2.config.client;\n      if (!apiClient) return Promise.resolve();\n      var _temp = _catch(function () {\n        return Promise.resolve(apiClient.getNotificationsCount()).then(function (response) {\n          return Promise.resolve(response.json()).then(function (data) {\n            notificationStore.setState(function (prevState) {\n              for (var storeId in prevState.stores) {\n                var store = prevState.stores[storeId];\n                store.unseenCount = data[storeId] || 0;\n              }\n              return {\n                unseenCount: data.ss_bell_count,\n                stores: _extends({}, prevState.stores)\n              };\n            });\n            _this2.config.emitter.emit('sync_notif_store');\n          });\n        });\n      }, function (e) {\n        console.log('SUPRSEND: error getting notifications count', e);\n      });\n      return Promise.resolve(_temp && _temp.then ? _temp.then(function () {}) : void 0);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.markClicked = function markClicked(id) {\n    try {\n      var _notifStore$stores2;\n      var _this3 = this;\n      var apiClient = _this3.config.client;\n      var notifStore = notificationStore.getState();\n      var activeStoreId = notifStore.activeStoreId;\n      if (!activeStoreId || !((_notifStore$stores2 = notifStore.stores) != null && _notifStore$stores2[activeStoreId])) return Promise.resolve();\n      var storeData = notifStore.stores[activeStoreId];\n      var notifications = storeData.notifications;\n      var clickedNotification = notifications.find(function (item) {\n        return item.n_id === id;\n      });\n      if (clickedNotification && (!clickedNotification.interacted_on || !clickedNotification.seen_on)) {\n        if (!apiClient) return Promise.resolve();\n        try {\n          if (!clickedNotification.interacted_on) {\n            apiClient.markNotificationClicked(id);\n          } else if (!clickedNotification.seen_on) {\n            apiClient.markNotificationRead(id);\n          }\n          var clickedOn = epochNow();\n          clickedNotification.interacted_on = clickedOn;\n          if (!clickedNotification.seen_on) {\n            var _loop = function _loop() {\n              var _store$notifications;\n              var store = notifStore.stores[storeId];\n              (_store$notifications = store.notifications) == null ? void 0 : _store$notifications.forEach(function (item) {\n                if (item.n_id === clickedNotification.n_id) {\n                  item.seen_on = clickedOn;\n                  item.interacted_on = clickedOn;\n                  if (store.unseenCount > 0) {\n                    store.unseenCount -= 1;\n                  }\n                }\n              });\n            };\n            for (var storeId in notifStore == null ? void 0 : notifStore.stores) {\n              _loop();\n            }\n          }\n          notificationStore.setState(_extends({}, notifStore));\n          _this3.config.emitter.emit('sync_notif_store');\n        } catch (e) {\n          console.log('SUPRSEND: error marking notification clicked', e);\n        }\n      }\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.markAllSeen = function markAllSeen() {\n    try {\n      var _this4 = this;\n      var apiClient = _this4.config.client;\n      try {\n        if (!apiClient) return Promise.resolve();\n        apiClient.markBellClicked();\n        notificationStore.setState({\n          unseenCount: 0\n        });\n        _this4.config.emitter.emit('sync_notif_store');\n      } catch (e) {\n        console.log('SUPRSEND: error marking all notifications seen', e);\n      }\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.markAllRead = function markAllRead() {\n    try {\n      var _this5 = this;\n      var apiClient = _this5.config.client;\n      try {\n        if (!apiClient) return Promise.resolve();\n        apiClient.markAllRead();\n        var notifStore = notificationStore.getState();\n        var clickedOn = epochNow();\n        for (var storeId in notifStore.stores) {\n          var store = notifStore.stores[storeId];\n          store.notifications.forEach(function (notification) {\n            if (!notification.seen_on) {\n              notification.seen_on = clickedOn;\n            }\n          });\n          store.unseenCount = 0;\n        }\n        notificationStore.setState({\n          stores: notifStore.stores\n        });\n        _this5.config.emitter.emit('sync_notif_store');\n      } catch (e) {\n        console.log('SUPRSEND: error marking all notifications read', e);\n      }\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.markRead = function markRead(id) {\n    try {\n      var _notifStore$stores3;\n      var _this6 = this;\n      var apiClient = _this6.config.client;\n      var notifStore = notificationStore.getState();\n      var activeStoreId = notifStore.activeStoreId;\n      if (!activeStoreId || !((_notifStore$stores3 = notifStore.stores) != null && _notifStore$stores3[activeStoreId])) return Promise.resolve();\n      var storeData = notifStore.stores[activeStoreId];\n      var notifications = storeData.notifications;\n      var clickedNotification = notifications.find(function (item) {\n        return item.n_id === id;\n      });\n      if (clickedNotification && !clickedNotification.seen_on) {\n        if (!apiClient) return Promise.resolve();\n        try {\n          apiClient.markNotificationRead(id);\n          var clickedOn = epochNow();\n          if (!clickedNotification.seen_on) {\n            var _loop2 = function _loop2() {\n              var _store$notifications2;\n              var store = notifStore.stores[storeId];\n              (_store$notifications2 = store.notifications) == null ? void 0 : _store$notifications2.forEach(function (item) {\n                if (item.n_id === clickedNotification.n_id) {\n                  item.seen_on = clickedOn;\n                  if (store.unseenCount > 0) {\n                    store.unseenCount -= 1;\n                  }\n                }\n              });\n            };\n            for (var storeId in notifStore == null ? void 0 : notifStore.stores) {\n              _loop2();\n            }\n          }\n          notificationStore.setState(_extends({}, notifStore));\n          _this6.config.emitter.emit('sync_notif_store');\n        } catch (e) {\n          console.log('SUPRSEND: error marking notification read', e);\n        }\n      }\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.markUnRead = function markUnRead(id) {\n    try {\n      var _notifStore$stores4;\n      var _this7 = this;\n      var apiClient = _this7.config.client;\n      var notifStore = notificationStore.getState();\n      var activeStoreId = notifStore.activeStoreId;\n      if (!activeStoreId || !((_notifStore$stores4 = notifStore.stores) != null && _notifStore$stores4[activeStoreId])) return Promise.resolve();\n      var storeData = notifStore.stores[activeStoreId];\n      var notifications = storeData.notifications;\n      var clickedNotification = notifications.find(function (item) {\n        return item.n_id === id;\n      });\n      if (clickedNotification && clickedNotification.seen_on) {\n        if (!apiClient) return Promise.resolve();\n        try {\n          apiClient.markNotificationUnRead(id);\n          if (clickedNotification.seen_on) {\n            var _loop3 = function _loop3() {\n              var _store$notifications3;\n              var store = notifStore.stores[storeId];\n              (_store$notifications3 = store.notifications) == null ? void 0 : _store$notifications3.forEach(function (item) {\n                if (item.n_id === clickedNotification.n_id) {\n                  item.seen_on = undefined;\n                  if (store.unseenCount >= 0) {\n                    store.unseenCount += 1;\n                  }\n                }\n              });\n            };\n            for (var storeId in notifStore == null ? void 0 : notifStore.stores) {\n              _loop3();\n            }\n          }\n          notificationStore.setState(_extends({}, notifStore));\n          _this7.config.emitter.emit('sync_notif_store');\n        } catch (e) {\n          console.log('SUPRSEND: error marking notification read', e);\n        }\n      }\n      return Promise.resolve();\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.markArchived = function markArchived(id) {\n    var _notifStore$stores5;\n    var apiClient = this.config.client;\n    var notifStore = notificationStore.getState();\n    var activeStoreId = notifStore.activeStoreId;\n    if (!activeStoreId || !((_notifStore$stores5 = notifStore.stores) != null && _notifStore$stores5[activeStoreId])) return;\n    var stores = notifStore == null ? void 0 : notifStore.stores;\n    var storeData = stores[activeStoreId];\n    var clickedNotification = storeData.notifications.find(function (item) {\n      return item.n_id === id;\n    });\n    if (clickedNotification && !clickedNotification.archived) {\n      if (!apiClient) return;\n      try {\n        apiClient.markNotificationArchive(id);\n        storeData.notifications = storeData.notifications.filter(function (notification) {\n          return notification.n_id !== id;\n        });\n        if (!clickedNotification.seen_on && storeData.unseenCount > 0) {\n          storeData.unseenCount -= 1;\n        }\n        notificationStore.setState(_extends({}, notifStore));\n        this.config.emitter.emit('sync_notif_store');\n      } catch (e) {\n        console.log('SUPRSEND: error marking notification archived', e);\n      }\n    }\n  };\n  _createClass(Inbox, [{\n    key: \"stores\",\n    get: function get() {\n      return this.config.stores;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      var notifStore = notificationStore.getState();\n      var activeStoreId = notifStore.activeStoreId;\n      var storeFilters = this.stores;\n      if (!activeStoreId) return;\n      return {\n        unseenCount: notifStore.unseenCount,\n        activeStoreId: notifStore.activeStoreId,\n        stores: notifStore.stores,\n        hasStores: storeFilters ? (storeFilters == null ? void 0 : storeFilters.length) > 0 : false,\n        hasNext: notifStore.hasNext,\n        initialLoading: notifStore.initialLoading,\n        fetchMoreLoading: notifStore.fetchMoreLoading\n      };\n    }\n  }]);\n  return Inbox;\n}();\n\nvar SuprSendInbox = /*#__PURE__*/function () {\n  function SuprSendInbox(workspaceKey, config) {\n    this.workspaceKey = '';\n    this.tenantId = void 0;\n    this.stores = void 0;\n    this.distinctId = void 0;\n    this.subscriberId = void 0;\n    this._client = void 0;\n    this._expiryTimerId = void 0;\n    this.feed = new Inbox(this);\n    this.emitter = mitt__default[\"default\"]();\n    this._validateConfig(workspaceKey);\n    this.tenantId = (config == null ? void 0 : config.tenantID) || 'default';\n    this._validateStore(config == null ? void 0 : config.stores);\n    this._validatePageSize(config == null ? void 0 : config.pageSize);\n    this._initializeStoreState();\n  }\n  var _proto = SuprSendInbox.prototype;\n  _proto._validateConfig = function _validateConfig(workspaceKey) {\n    if (!workspaceKey) {\n      throw new SuprSendError('workspaceKey missing');\n    } else {\n      this.workspaceKey = workspaceKey;\n    }\n  };\n  _proto._validateStore = function _validateStore(stores) {\n    if (!stores || !Array.isArray(stores)) return;\n    var validatedStores = [];\n    stores.forEach(function (store) {\n      if (!store.storeId) {\n        console.log('SuprSendInbox: storeId is mandatory if stores are used');\n        return;\n      }\n      var query = store == null ? void 0 : store.query;\n      var read;\n      var tags = [];\n      var categories = [];\n      var archived;\n      if (typeof (query == null ? void 0 : query.read) === 'boolean') {\n        read = query.read;\n      }\n      if (typeof (query == null ? void 0 : query.archived) === 'boolean') {\n        archived = query.archived;\n      }\n      if (typeof (query == null ? void 0 : query.tags) === 'string') {\n        tags = [query.tags];\n      } else if (Array.isArray(query == null ? void 0 : query.tags)) {\n        tags = query == null ? void 0 : query.tags.filter(function (tag) {\n          return typeof tag === 'string';\n        });\n      }\n      if (typeof (query == null ? void 0 : query.categories) === 'string') {\n        categories = [query.categories];\n      } else if (Array.isArray(query == null ? void 0 : query.categories)) {\n        categories = query == null ? void 0 : query.categories.filter(function (category) {\n          return typeof category === 'string';\n        });\n      }\n      validatedStores.push({\n        storeId: store.storeId,\n        label: store.label || store.storeId,\n        query: {\n          archived: archived,\n          read: read,\n          tags: tags,\n          categories: categories\n        }\n      });\n    });\n    this.stores = validatedStores;\n  };\n  _proto._validatePageSize = function _validatePageSize(pageSize) {\n    if (pageSize && typeof pageSize === 'number') {\n      var MAX_ALLOWED_PAGE_SIZE = 50;\n      var validatedPageSize = pageSize <= MAX_ALLOWED_PAGE_SIZE ? pageSize : MAX_ALLOWED_PAGE_SIZE;\n      configurationStore.setState({\n        pageSize: validatedPageSize\n      });\n    }\n  };\n  _proto._initializeStoreState = function _initializeStoreState() {\n    var _this = this;\n    var default_store = 'default_store';\n    var initialStoreData = {\n      notifications: [],\n      unseenCount: 0,\n      isFirstCall: true\n    };\n    if (this.stores && Array.isArray(this.stores) && this.stores.length > 0) {\n      var finalStores = {};\n      this.stores.map(function (store) {\n        finalStores[store.storeId] = _extends({}, initialStoreData);\n      });\n      notificationStore.setState({\n        stores: finalStores,\n        activeStoreId: this.stores[0].storeId\n      });\n    } else {\n      var _stores;\n      notificationStore.setState({\n        stores: (_stores = {}, _stores[default_store] = _extends({}, initialStoreData), _stores),\n        activeStoreId: default_store\n      });\n    }\n    // needed as wait for even listener to register after initialization\n    setTimeout(function () {\n      _this.emitter.emit('sync_notif_store');\n    }, 0);\n  };\n  _proto._startExipryCheck = function _startExipryCheck() {\n    var _this2 = this;\n    if (this._expiryTimerId) return;\n    this._expiryTimerId = setInterval(function () {\n      try {\n        var notifData = notificationStore.getState();\n        var storeNotifsData = notifData.stores;\n        var hasExpired = false;\n        for (var store in storeNotifsData) {\n          var notifications = storeNotifsData[store].notifications;\n          notifications = notifications.filter(function (notification) {\n            var expired = notification.expiry ? Date.now() > notification.expiry : false;\n            if (expired) {\n              hasExpired = true;\n              return false;\n            } else {\n              return true;\n            }\n          });\n          storeNotifsData[store].notifications = notifications;\n        }\n        var _temp = function () {\n          if (hasExpired) {\n            notificationStore.setState({\n              stores: storeNotifsData\n            });\n            return Promise.resolve(_this2.feed.getNotificationsCount()).then(function () {\n              _this2.emitter.emit('sync_notif_store');\n            });\n          }\n        }();\n        return Promise.resolve(_temp && _temp.then ? _temp.then(function () {}) : void 0);\n      } catch (e) {\n        return Promise.reject(e);\n      }\n    }, 30000);\n  };\n  _proto.identifyUser = function identifyUser(distinctId, subscriberId) {\n    this.distinctId = distinctId;\n    this.subscriberId = subscriberId;\n  };\n  _proto.changeActiveStore = function changeActiveStore(storeId) {\n    var _storeData$stores;\n    var storeData = notificationStore.getState();\n    var newStores = {};\n    if (storeData.activeStoreId === storeId) return;\n    if (!((_storeData$stores = storeData.stores) != null && _storeData$stores[storeId])) return;\n    for (var _storeId in storeData.stores) {\n      var store = storeData.stores[_storeId];\n      var storeNotifications = store.notifications.slice(0, 20);\n      newStores[_storeId] = {\n        notifications: storeNotifications,\n        unseenCount: store.unseenCount,\n        isFirstCall: store.isFirstCall\n      };\n    }\n    notificationStore.setState({\n      activeStoreId: storeId,\n      stores: newStores,\n      pageNumber: 1,\n      hasNext: true,\n      initialLoading: false,\n      fetchMoreLoading: false,\n      initialFetchTime: null\n    });\n    if (this.client) {\n      this.feed.fetchNotifications();\n    }\n  };\n  _proto.resetUser = function resetUser() {\n    var _this$_client;\n    notificationStore.setState({\n      unseenCount: 0,\n      pageNumber: 1,\n      hasNext: true,\n      initialLoading: false,\n      fetchMoreLoading: false,\n      initialFetchTime: null\n    });\n    this._initializeStoreState();\n    (_this$_client = this._client) == null ? void 0 : _this$_client.socket.disconnect();\n    this.distinctId = undefined;\n    this.subscriberId = undefined;\n    this._client = undefined;\n    clearInterval(this._expiryTimerId);\n    this._expiryTimerId = undefined;\n    this.feed = new Inbox(this);\n  };\n  _createClass(SuprSendInbox, [{\n    key: \"client\",\n    get: function get() {\n      if (this.distinctId && this.subscriberId) {\n        if (!this._client) {\n          this._client = new ApiClient(this);\n        }\n      }\n      return this._client;\n    }\n  }]);\n  return SuprSendInbox;\n}();\n\nmodule.exports = SuprSendInbox;\n//# sourceMappingURL=index.cjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@suprsend/js-inbox/dist/index.cjs\n");

/***/ })

};
;